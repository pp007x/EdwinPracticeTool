{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\PracticeTool\\\\practicetool\\\\src\\\\components\\\\Protectedroute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute(_ref) {\n  let {\n    element,\n    ...rest\n  } = _ref;\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  const decodedToken = jwtDecode(token);\n  const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n  if (userRole !== 'Admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    element: element,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","_ref","element","rest","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","decodedToken","userRole","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/PracticeTool/practicetool/src/components/Protectedroute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nfunction ProtectedRoute({element, ...rest}) {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n        return <Navigate to=\"/login\" />\r\n    }\r\n\r\n    const decodedToken = jwtDecode(token);\r\n    const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n    if (userRole !== 'Admin') {\r\n        return <Navigate to=\"/home\" />\r\n    }\r\n\r\n    return <Route element={element} {...rest} />\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,cAAcA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAACC,OAAO;IAAE,GAAGC;EAAI,CAAC,GAAAF,IAAA;EACtC,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,MAAMC,YAAY,GAAGf,SAAS,CAACO,KAAK,CAAC;EACrC,MAAMS,QAAQ,GAAGD,YAAY,CAAC,8DAA8D,CAAC;EAE7F,IAAIC,QAAQ,KAAK,OAAO,EAAE;IACtB,oBAAOd,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClC;EAEA,oBAAOZ,OAAA,CAACJ,KAAK;IAACO,OAAO,EAAEA,OAAQ;IAAA,GAAKC;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAChD;AAACG,EAAA,GAfQd,cAAc;AAiBvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}