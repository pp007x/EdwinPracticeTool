{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\Frontend\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport '../Css/LoginForm.css'; // import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [companyCode, setCompanyCode] = useState(\"\");\n  const [registerError, setRegisterError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleRegisterSubmit = async e => {\n    e.preventDefault();\n\n    // Register form submission logic...\n\n    try {\n      // Make API call to register the user\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Register\", {\n        username,\n        password,\n        companyCode\n      });\n\n      // Save the JWT token to local storage\n      localStorage.setItem('token', response.data);\n\n      // Get the role from the token\n      const decodedToken = jwtDecode(response.data);\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n\n      // Navigate to the correct page based on the role\n      if (userRole === 'Admin') {\n        navigate('/admin');\n      } else {\n        navigate('/home');\n      }\n    } catch (error) {\n      setRegisterError(\"Registration failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegisterSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Company Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyCode,\n        onChange: e => setCompanyCode(e.target.value),\n        placeholder: \"Company Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), registerError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: registerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"loginButton\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"p3PW7yoFDu+4IAedTz2n9TOwcDE=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","RegisterForm","_s","username","setUsername","password","setPassword","companyCode","setCompanyCode","registerError","setRegisterError","navigate","handleRegisterSubmit","e","preventDefault","response","post","localStorage","setItem","data","decodedToken","userRole","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/Frontend/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../Css/LoginForm.css';  // import your CSS file\r\n\r\nfunction RegisterForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [companyCode, setCompanyCode] = useState(\"\");\r\n  const [registerError, setRegisterError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Register form submission logic...\r\n\r\n    try {\r\n      // Make API call to register the user\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Register\", {\r\n        username,\r\n        password,\r\n        companyCode\r\n      });\r\n\r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n\r\n      // Get the role from the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n      // Navigate to the correct page based on the role\r\n      if (userRole === 'Admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/home');\r\n      }\r\n\r\n    } catch (error) {\r\n      setRegisterError(\"Registration failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <form onSubmit={handleRegisterSubmit}>\r\n        <label className=\"label\">Username:</label>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        <label className=\"label\">Password:</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        <label className=\"label\">Company Code:</label>\r\n        <input type=\"text\" value={companyCode} onChange={e => setCompanyCode(e.target.value)} placeholder=\"Company Code\" />\r\n        {registerError && <div className=\"error\">{registerError}</div>}\r\n        <button type=\"submit\" className=\"loginButton\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}