{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport styles from '../Css/LoginForm.module.css'; // import your CSS file as a module\nimport logo from '../images/HigtechLogo.png';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      username: username,\n      password: password\n    };\n    try {\n      const response = await axios.post(`${config.API_BASE_URL}/api/Authentication/Login`, data);\n\n      // Save the JWT token to local storage\n      localStorage.setItem('token', response.data);\n\n      // Decode the token\n      const decodedToken = jwtDecode(response.data);\n\n      // Get the role and the user ID from the token\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n      const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\n\n      // Check user's scores\n      try {\n        const totalScoreResponse = await axios.get(`${config.API_BASE_URL}/api/TotalScores/user/me`, {\n          headers: {\n            'Authorization': `Bearer ${response.data}`\n          }\n        });\n        const totalScore = totalScoreResponse.data;\n\n        // If user's scores are null, navigate to /reactionform\n        if (!totalScore || totalScore === null) {\n          navigate('/reactionform');\n        } else {\n          // Navigate to the correct page based on the role\n          if (userRole === 'Admin') {\n            navigate('/admin');\n          } else {\n            navigate('/dashboard');\n          }\n        }\n      } catch (error) {\n        navigate('/infoReactionForm');\n      }\n    } catch (error) {\n      setLoginError(\"Invalid username or password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginFormWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBox,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: styles.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Username\",\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.loginButton,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.registerButton,\n        onClick: () => navigate('/register'),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.resetPasswordButton,\n        onClick: () => navigate('/resetpassword'),\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"upSH+gC7JkxkCeD+/+1rxSB6KxY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","styles","logo","config","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","loginError","setLoginError","navigate","handleSubmit","e","preventDefault","data","response","post","API_BASE_URL","localStorage","setItem","decodedToken","userRole","userId","totalScoreResponse","get","headers","totalScore","error","className","loginFormWrapper","children","inputBox","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","label","type","value","onChange","target","placeholder","input","loginButton","registerButton","onClick","resetPasswordButton","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport styles from '../Css/LoginForm.module.css';  // import your CSS file as a module\r\nimport logo from '../images/HigtechLogo.png';\r\nimport config from '../config';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${config.API_BASE_URL}/api/Authentication/Login`, data);\r\n\r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n\r\n      // Decode the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      \r\n      // Get the role and the user ID from the token\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n      const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\r\n\r\n      // Check user's scores\r\n      try {\r\n        const totalScoreResponse = await axios.get(`${config.API_BASE_URL}/api/TotalScores/user/me`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${response.data}`\r\n          }\r\n        });\r\n        \r\n        const totalScore = totalScoreResponse.data;\r\n\r\n        // If user's scores are null, navigate to /reactionform\r\n        if (!totalScore || totalScore === null) {\r\n          navigate('/reactionform');\r\n        } else {\r\n          // Navigate to the correct page based on the role\r\n          if (userRole === 'Admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n\r\n      } catch (error) {\r\n        navigate('/infoReactionForm');\r\n      }\r\n\r\n    } catch (error) {\r\n      setLoginError(\"Invalid username or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <img src={logo} alt=\"Logo\" className={styles.logo} /> \r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Username:</label>\r\n          <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" className={styles.input} />\r\n          <label className={styles.label}>Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" className={styles.input} />\r\n          {loginError && <div className={styles.error}>{loginError}</div>}\r\n          <button type=\"submit\" className={styles.loginButton}>Login</button>\r\n        </form>\r\n        <button className={styles.registerButton} onClick={() => navigate('/register')}>Register</button>\r\n        <button className={styles.resetPasswordButton} onClick={() => navigate('/resetpassword')}>Forgot Password?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}