{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ReactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../Css/ReactionForm.module.css';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactionForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProfileAndQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const localConfig = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n\n        // Fetch the profile data\n        const profileResponse = await axios.get(`${config.API_BASE_URL}/api/Users/Profile`, localConfig);\n        console.log(profileResponse.data.CompanyId);\n\n        // Use the CompanyId from the profile data to fetch the questions\n        const questionsResponse = await axios.get(`${config.API_BASE_URL}/api/ReactionForm?companyId=${profileResponse.data.CompanyId}`, localConfig);\n\n        // Store the UserId\n        setUserId(profileResponse.data.id);\n        setQuestions(questionsResponse.data);\n      } catch (error) {\n        console.error('Failed to fetch profile or questions:', error);\n      }\n    };\n    fetchProfileAndQuestions();\n  }, []);\n  const handleAnswerChange = (questionId, answerId) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answerId\n    }));\n  };\n  const calculateTotalScore = () => {\n    let totalScoreD = 0;\n    let totalScoreI = 0;\n    let totalScoreS = 0;\n    let totalScoreC = 0;\n    for (let question of questions) {\n      const answerId = answers[question.id];\n      if (answerId) {\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\n        if (selectedAnswer) {\n          totalScoreD += selectedAnswer.scoreValueD;\n          totalScoreI += selectedAnswer.scoreValueI;\n          totalScoreS += selectedAnswer.scoreValueS;\n          totalScoreC += selectedAnswer.scoreValueC;\n        }\n      }\n    }\n    return {\n      scoreValueD: totalScoreD,\n      scoreValueI: totalScoreI,\n      scoreValueS: totalScoreS,\n      scoreValueC: totalScoreC,\n      userId: userId\n    };\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const totalScore = calculateTotalScore();\n    try {\n      const token = localStorage.getItem('token');\n      const localConfig = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.post(`${config.API_BASE_URL}/api/TotalScores`, totalScore, localConfig);\n      console.log(response.data);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error(\"Failed to submit total score:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"form-control\"],\n    children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [question.questionText, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"answer-options\"],\n            children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: answer.id.toString(),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: answer.id.toString(),\n                name: question.id.toString(),\n                value: answer.id,\n                onChange: () => handleAnswerChange(question.id, answer.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this), answer.answerText]\n            }, answer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactionForm, \"kuyUrI3l4Ix5wvWK+dWhGqce+/U=\", false, function () {\n  return [useNavigate];\n});\n_c = ReactionForm;\nexport default ReactionForm;\nvar _c;\n$RefreshReg$(_c, \"ReactionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","styles","config","jsxDEV","_jsxDEV","ReactionForm","_s","questions","setQuestions","answers","setAnswers","userId","setUserId","navigate","fetchProfileAndQuestions","token","localStorage","getItem","localConfig","headers","Authorization","profileResponse","get","API_BASE_URL","console","log","data","CompanyId","questionsResponse","id","error","handleAnswerChange","questionId","answerId","prevAnswers","calculateTotalScore","totalScoreD","totalScoreI","totalScoreS","totalScoreC","question","selectedAnswer","find","answer","scoreValueD","scoreValueI","scoreValueS","scoreValueC","handleSubmit","event","preventDefault","totalScore","response","post","className","children","length","onSubmit","map","questionText","htmlFor","toString","type","name","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","answerText","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ReactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from '../Css/ReactionForm.module.css';\r\nimport config from '../config';\r\n\r\nconst ReactionForm = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileAndQuestions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const localConfig = {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        };\r\n        \r\n        // Fetch the profile data\r\n        const profileResponse = await axios.get(`${config.API_BASE_URL}/api/Users/Profile`, localConfig);\r\n        console.log(profileResponse.data.CompanyId);\r\n        \r\n        // Use the CompanyId from the profile data to fetch the questions\r\n        const questionsResponse = await axios.get(`${config.API_BASE_URL}/api/ReactionForm?companyId=${profileResponse.data.CompanyId}`, localConfig);\r\n        \r\n        // Store the UserId\r\n        setUserId(profileResponse.data.id);\r\n\r\n        setQuestions(questionsResponse.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch profile or questions:', error);\r\n      }\r\n    };\r\n    fetchProfileAndQuestions();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionId, answerId) => {\r\n    setAnswers(prevAnswers => ({\r\n      ...prevAnswers,\r\n      [questionId]: answerId\r\n    }));\r\n  };\r\n\r\n  const calculateTotalScore = () => {\r\n    let totalScoreD = 0;\r\n    let totalScoreI = 0;\r\n    let totalScoreS = 0;\r\n    let totalScoreC = 0;\r\n\r\n    for (let question of questions) {\r\n      const answerId = answers[question.id];\r\n      if (answerId) {\r\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\r\n        if (selectedAnswer) {\r\n          totalScoreD += selectedAnswer.scoreValueD;\r\n          totalScoreI += selectedAnswer.scoreValueI;\r\n          totalScoreS += selectedAnswer.scoreValueS;\r\n          totalScoreC += selectedAnswer.scoreValueC;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      scoreValueD: totalScoreD,\r\n      scoreValueI: totalScoreI,\r\n      scoreValueS: totalScoreS,\r\n      scoreValueC: totalScoreC,\r\n      userId: userId\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const totalScore = calculateTotalScore();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const localConfig = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      };\r\n      const response = await axios.post(\r\n        `${config.API_BASE_URL}/api/TotalScores`,\r\n        totalScore,\r\n        localConfig\r\n      );\r\n      console.log(response.data);\r\n\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error(\"Failed to submit total score:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"form-control\"]}>\r\n      {questions.length > 0 ? (\r\n        <form onSubmit={handleSubmit}>\r\n          {questions.map((question) => (\r\n            <div key={question.id}>\r\n              <label>\r\n                {question.questionText}\r\n                <div className={styles[\"answer-options\"]}>\r\n                  {question.answers.map((answer) => (\r\n                    <label htmlFor={answer.id.toString()} key={answer.id}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={answer.id.toString()}\r\n                        name={question.id.toString()}\r\n                        value={answer.id}\r\n                        onChange={() => handleAnswerChange(question.id, answer.id)}\r\n                      />\r\n                      {answer.answerText}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}