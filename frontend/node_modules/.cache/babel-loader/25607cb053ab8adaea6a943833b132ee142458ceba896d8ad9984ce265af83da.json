{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import yaml from'js-yaml';import config from'../../config';import DashboardSidebar from'./AdminSidebar';import styles from'../../Css/Dashboard.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Header=function Header(_ref){var title=_ref.title;return/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"page-title\"],children:title})]});};function AdminNewQuestion(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),companies=_useState6[0],setCompanies=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),selectedCompany=_useState8[0],setSelectedCompany=_useState8[1];useEffect(function(){fetch(\"\".concat(config.API_BASE_URL,\"/api/companies\")).then(function(response){return response.json();}).then(function(data){return setCompanies(data);});},[]);var handleFileUpload=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var file,reader;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setLoading(true);file=event.target.files[0];reader=new FileReader();reader.onload=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var yamlText,questions,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:yamlText=e.target.result;questions=yaml.load(yamlText);questions.forEach(function(question){return question.CompanyId=selectedCompany;});setQuestions(questions);_context.prev=4;_context.next=7;return fetch(\"\".concat(config.API_BASE_URL,\"/api/YamlUpload\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(questions)});case 7:response=_context.sent;if(response.ok){alert(\"Data successfully uploaded\");}else{alert(\"Failed to upload data\");}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](4);console.error('Error:',_context.t0);case 14:_context.prev=14;setLoading(false);return _context.finish(14);case 17:case\"end\":return _context.stop();}},_callee,null,[[4,11,14,17]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();reader.readAsText(file);case 5:case\"end\":return _context2.stop();}},_callee2);}));return function handleFileUpload(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:styles.dashboard,children:[/*#__PURE__*/_jsx(DashboardSidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:styles.main,children:[/*#__PURE__*/_jsx(Header,{title:\"Admin New Question\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCompany,onChange:function onChange(event){return setSelectedCompany(event.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a company...\"}),companies.map(function(company){return/*#__PURE__*/_jsx(\"option\",{value:company.id,children:company.name},company.id);})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload,disabled:loading||!selectedCompany})]})]});}export default AdminNewQuestion;","map":{"version":3,"names":["React","useState","useEffect","yaml","config","DashboardSidebar","styles","jsx","_jsx","jsxs","_jsxs","Header","_ref","title","className","header","children","AdminNewQuestion","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","loading","setLoading","_useState5","_useState6","companies","setCompanies","_useState7","_useState8","selectedCompany","setSelectedCompany","fetch","concat","API_BASE_URL","then","response","json","data","handleFileUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","event","file","reader","wrap","_callee2$","_context2","prev","next","target","files","FileReader","onload","_ref3","_callee","e","yamlText","_callee$","_context","result","load","forEach","question","CompanyId","method","headers","body","JSON","stringify","sent","ok","alert","t0","console","error","finish","stop","_x2","apply","arguments","readAsText","_x","dashboard","main","value","onChange","map","company","id","name","type","disabled"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/Admin/AdminNewQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport yaml from 'js-yaml';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/Dashboard.module.css';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminNewQuestion() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`${config.API_BASE_URL}/api/companies`)\r\n            .then(response => response.json())\r\n            .then(data => setCompanies(data));\r\n    }, []);\r\n\r\n    const handleFileUpload = async (event) => {\r\n        setLoading(true);\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const yamlText = e.target.result;\r\n            const questions = yaml.load(yamlText);\r\n            questions.forEach(question => question.CompanyId = selectedCompany);\r\n            setQuestions(questions);\r\n\r\n            try {\r\n                const response = await fetch(`${config.API_BASE_URL}/api/YamlUpload`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(questions)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    alert(\"Data successfully uploaded\");\r\n                } else {\r\n                    alert(\"Failed to upload data\");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dashboard}>\r\n            <DashboardSidebar />\r\n            <div className={styles.main}>\r\n                <Header title=\"Admin New Question\" />\r\n                <select value={selectedCompany} onChange={event => setSelectedCompany(event.target.value)}>\r\n                    <option value=\"\">Select a company...</option>\r\n                    {companies.map(company => (\r\n                        <option key={company.id} value={company.id}>{company.name}</option>\r\n                    ))}\r\n                </select>\r\n                <input type=\"file\" onChange={handleFileUpload} disabled={loading || !selectedCompany} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminNewQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}