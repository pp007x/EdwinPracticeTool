{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\Admin\\\\AdminUserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nimport DashboardSidebar from './AdminSidebar';\nimport styles from '../../Css/Dashboard.module.css';\nimport axios from 'axios';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"page-title\"],\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_c = Header;\nconst Dashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [resultData, setResultData] = useState(null);\n  const [onderwerpData, setOnderwerpData] = useState(null);\n  const [companies, setCompanies] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`);\n        setCompanies(Array.isArray(response.data) ? response.data : []);\n      } catch (error) {\n        console.error('Error fetching companies:', error);\n      }\n    };\n    fetchCompanies();\n  }, []);\n  useEffect(() => {\n    if (selectedCompany) {\n      axios.get(`${config.API_BASE_URL}/api/Companies/${selectedCompany}/users`).then(response => {\n        setUsers(Array.isArray(response.data) ? response.data : []);\n      }).catch(error => {\n        console.error('Error fetching users:', error);\n      });\n    }\n  }, [selectedCompany]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (selectedUser) {\n      fetch(`${config.API_BASE_URL}/api/TotalScores/user/${selectedUser}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.ok ? response.json() : Promise.reject()).then(serverData => {\n        // rest of your code\n      }).catch(error => console.error('There has been a problem with your fetch operation:', error));\n    }\n  }, [selectedUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: onderwerpData ? onderwerpData.name : 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedCompany(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), companies.map((company, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.id,\n          children: company.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a User:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedUser(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.username\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"q79M39pdlCnJ8yvVZ9sXNwHrjbs=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","DashboardSidebar","styles","axios","config","jsxDEV","_jsxDEV","Header","_ref","title","className","header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","_s","chartData","setChartData","resultData","setResultData","onderwerpData","setOnderwerpData","companies","setCompanies","users","setUsers","selectedCompany","setSelectedCompany","selectedUser","setSelectedUser","fetchCompanies","response","get","API_BASE_URL","Array","isArray","data","error","console","then","catch","token","localStorage","getItem","fetch","headers","ok","json","Promise","reject","serverData","dashboard","main","name","onChange","e","target","value","map","company","index","id","user","username","_c2","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/Admin/AdminUserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/Dashboard.module.css';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [resultData, setResultData] = useState(null);\r\n  const [onderwerpData, setOnderwerpData] = useState(null);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`);\r\n        setCompanies(Array.isArray(response.data) ? response.data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching companies:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany) {\r\n      axios.get(`${config.API_BASE_URL}/api/Companies/${selectedCompany}/users`)\r\n        .then(response => {\r\n          setUsers(Array.isArray(response.data) ? response.data : []);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching users:', error);\r\n        });\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (selectedUser) {\r\n      fetch(`${config.API_BASE_URL}/api/TotalScores/user/${selectedUser}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then(response => response.ok ? response.json() : Promise.reject())\r\n        .then(serverData => {\r\n          // rest of your code\r\n        })\r\n        .catch(error => console.error('There has been a problem with your fetch operation:', error));\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title={onderwerpData ? onderwerpData.name : 'Loading...'} />\r\n\r\n        <label>Select a Company:</label>\r\n        <select onChange={(e) => setSelectedCompany(e.target.value)}>\r\n          <option value=\"\">Select a company</option>\r\n          {companies.map((company, index) =>\r\n            <option key={index} value={company.id}>{company.name}</option>\r\n          )}\r\n        </select>\r\n\r\n        <label>Select a User:</label>\r\n        <select onChange={(e) => setSelectedUser(e.target.value)}>\r\n          <option value=\"\">Select a user</option>\r\n          {users.map((user, index) =>\r\n            <option key={index} value={user.id}>{user.username}</option>\r\n          )}\r\n        </select>\r\n\r\n        {/* rest of your code */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}