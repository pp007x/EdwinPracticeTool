{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\Admin\\\\AdminEditQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport config from '../../config';\nimport DashboardSidebar from './AdminSidebar';\nimport styles from '../../Css/Dashboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"page-title\"],\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = Header;\nfunction AdminNewQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  useEffect(() => {\n    fetch(`${config.API_BASE_URL}/api/companies`).then(response => response.json()).then(data => setCompanies(data));\n  }, []);\n  const handleCompanyChange = event => {\n    setSelectedCompany(event.target.value);\n  };\n  useEffect(() => {\n    if (selectedCompany) {\n      fetch(`${config.API_BASE_URL}/api/Questions/${selectedCompany}`).then(response => response.json()).then(data => setQuestions(data));\n    }\n  }, [selectedCompany]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Admin New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCompany,\n        onChange: handleCompanyChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a company...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.id,\n          children: company.name\n        }, company.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Existing Questions for Company: \", selectedCompany]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Answer Text: \", answer.answerText]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value D: \", answer.scoreValueD]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value I: \", answer.scoreValueI]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value S: \", answer.scoreValueS]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value C: \", answer.scoreValueC]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)]\n              }, answer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No questions found for the selected company.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminNewQuestions, \"IXTfzTgu0/535NxH4xE7dPM209w=\");\n_c2 = AdminNewQuestions;\nexport default AdminNewQuestions;\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"AdminNewQuestions\");","map":{"version":3,"names":["React","useState","useEffect","config","DashboardSidebar","styles","jsxDEV","_jsxDEV","Header","_ref","title","className","header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminNewQuestions","_s","questions","setQuestions","companies","setCompanies","selectedCompany","setSelectedCompany","fetch","API_BASE_URL","then","response","json","data","handleCompanyChange","event","target","value","dashboard","main","onChange","map","company","id","name","length","question","questionText","answers","answer","answerText","scoreValueD","scoreValueI","scoreValueS","scoreValueC","_c2","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/Admin/AdminEditQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/Dashboard.module.css';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminNewQuestions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`${config.API_BASE_URL}/api/companies`)\r\n      .then(response => response.json())\r\n      .then(data => setCompanies(data));\r\n  }, []);\r\n\r\n  const handleCompanyChange = (event) => {\r\n    setSelectedCompany(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany) {\r\n      fetch(`${config.API_BASE_URL}/api/Questions/${selectedCompany}`)\r\n        .then(response => response.json())\r\n        .then(data => setQuestions(data));\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title=\"Admin New Question\" />\r\n        <select value={selectedCompany} onChange={handleCompanyChange}>\r\n          <option value=\"\">Select a company...</option>\r\n          {companies.map(company => (\r\n            <option key={company.id} value={company.id}>{company.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {questions.length > 0 ? (\r\n          <div>\r\n            <h2>Existing Questions for Company: {selectedCompany}</h2>\r\n            <ul>\r\n              {questions.map(question => (\r\n                <li key={question.id}>\r\n                  <h3>{question.questionText}</h3>\r\n                  <ul>\r\n                    {question.answers.map(answer => (\r\n                      <li key={answer.id}>\r\n                        <p>Answer Text: {answer.answerText}</p>\r\n                        <p>Score Value D: {answer.scoreValueD}</p>\r\n                        <p>Score Value I: {answer.scoreValueI}</p>\r\n                        <p>Score Value S: {answer.scoreValueS}</p>\r\n                        <p>Score Value C: {answer.scoreValueC}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <p>No questions found for the selected company.</p>\r\n        )}\r\n\r\n        <h2>Add New Question</h2>\r\n        {/* Add your code for adding a new question */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminNewQuestions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}