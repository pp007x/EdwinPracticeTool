{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\Admin\\\\AdminEditQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport config from '../../config';\nimport DashboardSidebar from './AdminSidebar';\nimport styles from '../../Css/Dashboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"page-title\"],\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = Header;\nfunction AdminEditQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [editedQuestions, setEditedQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState({\n    questionText: '',\n    companyId: '',\n    answers: []\n  });\n  const [newAnswer, setNewAnswer] = useState({\n    answerText: '',\n    scoreValueD: 0,\n    scoreValueI: 0,\n    scoreValueS: 0,\n    scoreValueC: 0\n  });\n  useEffect(() => {\n    fetch(`${config.API_BASE_URL}/api/companies`).then(response => response.json()).then(data => setCompanies(data));\n  }, []);\n  const handleCompanyChange = event => {\n    const companyId = event.target.value;\n    setSelectedCompany(companyId);\n    if (companyId) {\n      fetch(`${config.API_BASE_URL}/api/Questions/${companyId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => response.json()).then(data => {\n        setQuestions(data);\n        setEditedQuestions(data);\n      }).catch(error => console.error(error));\n    }\n  };\n  const handleQuestionChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedQuestions(prevState => {\n      const updatedQuestions = [...prevState];\n      updatedQuestions[index][name] = value;\n      return updatedQuestions;\n    });\n  };\n  const handleAnswerChange = (questionIndex, answerIndex, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedQuestions(prevState => {\n      const updatedQuestions = [...prevState];\n      updatedQuestions[questionIndex].answers[answerIndex][name] = value;\n      return updatedQuestions;\n    });\n  };\n  const handleSubmit = () => {\n    fetch(`${config.API_BASE_URL}/api/Questions`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(editedQuestions)\n    }).then(response => {\n      if (response.ok) {\n        console.log('Questions updated successfully');\n      } else {\n        console.error('Failed to update questions');\n      }\n    }).catch(error => console.error('Error:', error));\n  };\n  const handleNewQuestionChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewQuestion(prevState => ({\n      ...prevState,\n      [name]: value,\n      companyId: selectedCompany\n    }));\n  };\n  const handleNewAnswerChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewAnswer(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleAddNewAnswer = () => {\n    setNewQuestion(prevState => ({\n      ...prevState,\n      answers: [...prevState.answers, newAnswer]\n    }));\n    setNewAnswer({\n      answerText: '',\n      scoreValueD: 0,\n      scoreValueI: 0,\n      scoreValueS: 0,\n      scoreValueC: 0\n    });\n  };\n  const handleAddNewQuestion = () => {\n    setEditedQuestions(prevState => [...prevState, newQuestion]);\n    setNewQuestion({\n      questionText: '',\n      companyId: selectedCompany,\n      answers: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Admin Edit Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCompany,\n        onChange: handleCompanyChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a company...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: company.id,\n          children: company.name\n        }, company.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Existing Questions for Company: \", selectedCompany]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: editedQuestions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"questionText\",\n                value: question.questionText,\n                onChange: event => handleQuestionChange(questionIndex, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Answer Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"answerText\",\n                    value: answer.answerText,\n                    onChange: event => handleAnswerChange(questionIndex, answerIndex, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"scoreValueD\",\n                    value: answer.scoreValueD,\n                    onChange: event => handleAnswerChange(questionIndex, answerIndex, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value I:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"scoreValueI\",\n                    value: answer.scoreValueI,\n                    onChange: event => handleAnswerChange(questionIndex, answerIndex, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value S:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"scoreValueS\",\n                    value: answer.scoreValueS,\n                    onChange: event => handleAnswerChange(questionIndex, answerIndex, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Score Value C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"scoreValueC\",\n                    value: answer.scoreValueC,\n                    onChange: event => handleAnswerChange(questionIndex, answerIndex, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this)]\n              }, answer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a new question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"questionText\",\n            value: newQuestion.questionText,\n            onChange: handleNewQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add answers to the new question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Answer Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"answerText\",\n            value: newAnswer.answerText,\n            onChange: handleNewAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Score Value D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"scoreValueD\",\n            value: newAnswer.scoreValueD,\n            onChange: handleNewAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Score Value I:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"scoreValueI\",\n            value: newAnswer.scoreValueI,\n            onChange: handleNewAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Score Value S:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"scoreValueS\",\n            value: newAnswer.scoreValueS,\n            onChange: handleNewAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Score Value C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"scoreValueC\",\n            value: newAnswer.scoreValueC,\n            onChange: handleNewAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewAnswer,\n          children: \"Add Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewQuestion,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No questions found for the selected company.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminEditQuestions, \"l8ssjF4a3M4A1wTNOER0YL7FIbo=\");\n_c2 = AdminEditQuestions;\nexport default AdminEditQuestions;\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"AdminEditQuestions\");","map":{"version":3,"names":["React","useState","useEffect","config","DashboardSidebar","styles","jsxDEV","_jsxDEV","Header","_ref","title","className","header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminEditQuestions","_s","questions","setQuestions","companies","setCompanies","selectedCompany","setSelectedCompany","editedQuestions","setEditedQuestions","newQuestion","setNewQuestion","questionText","companyId","answers","newAnswer","setNewAnswer","answerText","scoreValueD","scoreValueI","scoreValueS","scoreValueC","fetch","API_BASE_URL","then","response","json","data","handleCompanyChange","event","target","value","headers","Authorization","localStorage","getItem","catch","error","console","handleQuestionChange","index","name","prevState","updatedQuestions","handleAnswerChange","questionIndex","answerIndex","handleSubmit","method","body","JSON","stringify","ok","log","handleNewQuestionChange","handleNewAnswerChange","handleAddNewAnswer","handleAddNewQuestion","dashboard","main","onChange","map","company","id","length","question","type","answer","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/Admin/AdminEditQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/Dashboard.module.css';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminEditQuestions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [editedQuestions, setEditedQuestions] = useState([]);\r\n  const [newQuestion, setNewQuestion] = useState({ questionText: '', companyId: '', answers: [] });\r\n  const [newAnswer, setNewAnswer] = useState({ answerText: '', scoreValueD: 0, scoreValueI: 0, scoreValueS: 0, scoreValueC: 0 });\r\n\r\n  useEffect(() => {\r\n    fetch(`${config.API_BASE_URL}/api/companies`)\r\n      .then(response => response.json())\r\n      .then(data => setCompanies(data));\r\n  }, []);\r\n\r\n  const handleCompanyChange = (event) => {\r\n    const companyId = event.target.value;\r\n    setSelectedCompany(companyId);\r\n\r\n    if (companyId) {\r\n      fetch(`${config.API_BASE_URL}/api/Questions/${companyId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setQuestions(data);\r\n          setEditedQuestions(data);\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n  };\r\n\r\n  const handleQuestionChange = (index, event) => {\r\n    const { name, value } = event.target;\r\n    setEditedQuestions(prevState => {\r\n      const updatedQuestions = [...prevState];\r\n      updatedQuestions[index][name] = value;\r\n      return updatedQuestions;\r\n    });\r\n  };\r\n\r\n  const handleAnswerChange = (questionIndex, answerIndex, event) => {\r\n    const { name, value } = event.target;\r\n    setEditedQuestions(prevState => {\r\n      const updatedQuestions = [...prevState];\r\n      updatedQuestions[questionIndex].answers[answerIndex][name] = value;\r\n      return updatedQuestions;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    fetch(`${config.API_BASE_URL}/api/Questions`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: JSON.stringify(editedQuestions)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log('Questions updated successfully');\r\n        } else {\r\n          console.error('Failed to update questions');\r\n        }\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  const handleNewQuestionChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewQuestion(prevState => ({ ...prevState, [name]: value, companyId: selectedCompany }));\r\n  };\r\n\r\n  const handleNewAnswerChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewAnswer(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleAddNewAnswer = () => {\r\n    setNewQuestion(prevState => ({\r\n      ...prevState,\r\n      answers: [...prevState.answers, newAnswer]\r\n    }));\r\n    setNewAnswer({ answerText: '', scoreValueD: 0, scoreValueI: 0, scoreValueS: 0, scoreValueC: 0 });\r\n  };\r\n\r\n  const handleAddNewQuestion = () => {\r\n    setEditedQuestions(prevState => [...prevState, newQuestion]);\r\n    setNewQuestion({ questionText: '', companyId: selectedCompany, answers: [] });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title=\"Admin Edit Questions\" />\r\n        <select value={selectedCompany} onChange={handleCompanyChange}>\r\n          <option value=\"\">Select a company...</option>\r\n          {companies.map(company => (\r\n            <option key={company.id} value={company.id}>{company.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {questions.length > 0 ? (\r\n          <div>\r\n            <h2>Existing Questions for Company: {selectedCompany}</h2>\r\n            <ul>\r\n              {editedQuestions.map((question, questionIndex) => (\r\n                <li key={question.id}>\r\n                  <h3>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"questionText\"\r\n                      value={question.questionText}\r\n                      onChange={event => handleQuestionChange(questionIndex, event)}\r\n                    />\r\n                  </h3>\r\n                  <ul>\r\n                    {question.answers.map((answer, answerIndex) => (\r\n                      <li key={answer.id}>\r\n                        <p>\r\n                          Answer Text:\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"answerText\"\r\n                            value={answer.answerText}\r\n                            onChange={event => handleAnswerChange(questionIndex, answerIndex, event)}\r\n                          />\r\n                        </p>\r\n                        <p>\r\n                          Score Value D:\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"scoreValueD\"\r\n                            value={answer.scoreValueD}\r\n                            onChange={event => handleAnswerChange(questionIndex, answerIndex, event)}\r\n                          />\r\n                        </p>\r\n                        <p>\r\n                          Score Value I:\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"scoreValueI\"\r\n                            value={answer.scoreValueI}\r\n                            onChange={event => handleAnswerChange(questionIndex, answerIndex, event)}\r\n                          />\r\n                        </p>\r\n                        <p>\r\n                          Score Value S:\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"scoreValueS\"\r\n                            value={answer.scoreValueS}\r\n                            onChange={event => handleAnswerChange(questionIndex, answerIndex, event)}\r\n                          />\r\n                        </p>\r\n                        <p>\r\n                          Score Value C:\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"scoreValueC\"\r\n                            value={answer.scoreValueC}\r\n                            onChange={event => handleAnswerChange(questionIndex, answerIndex, event)}\r\n                          />\r\n                        </p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <h2>Add a new question:</h2>\r\n            <label>\r\n              Question Text:\r\n              <input\r\n                type=\"text\"\r\n                name=\"questionText\"\r\n                value={newQuestion.questionText}\r\n                onChange={handleNewQuestionChange}\r\n              />\r\n            </label>\r\n\r\n            <h2>Add answers to the new question:</h2>\r\n            <label>\r\n              Answer Text:\r\n              <input\r\n                type=\"text\"\r\n                name=\"answerText\"\r\n                value={newAnswer.answerText}\r\n                onChange={handleNewAnswerChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Score Value D:\r\n              <input\r\n                type=\"number\"\r\n                name=\"scoreValueD\"\r\n                value={newAnswer.scoreValueD}\r\n                onChange={handleNewAnswerChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Score Value I:\r\n              <input\r\n                type=\"number\"\r\n                name=\"scoreValueI\"\r\n                value={newAnswer.scoreValueI}\r\n                onChange={handleNewAnswerChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Score Value S:\r\n              <input\r\n                type=\"number\"\r\n                name=\"scoreValueS\"\r\n                value={newAnswer.scoreValueS}\r\n                onChange={handleNewAnswerChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Score Value C:\r\n              <input\r\n                type=\"number\"\r\n                name=\"scoreValueC\"\r\n                value={newAnswer.scoreValueC}\r\n                onChange={handleNewAnswerChange}\r\n              />\r\n            </label>\r\n            <button onClick={handleAddNewAnswer}>Add Answer</button>\r\n            <button onClick={handleAddNewQuestion}>Add Question</button>\r\n            <button onClick={handleSubmit}>Submit All Changes</button>\r\n          </div>\r\n        ) : (\r\n          <p>No questions found for the selected company.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminEditQuestions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}