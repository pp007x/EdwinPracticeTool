{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ReactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../Css/ReactionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const result = await axios.get(\"http://localhost:5162/api/Questions\");\n        setQuestions(result.data);\n      } catch (error) {\n        console.error('Failed to fetch questions:', error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerChange = (questionId, answerId) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answerId\n    }));\n  };\n  const calculateTotalScore = () => {\n    let totalScoreD = 0;\n    let totalScoreI = 0;\n    let totalScoreS = 0;\n    let totalScoreC = 0;\n    for (let question of questions) {\n      const answerId = answers[question.id];\n      if (answerId) {\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\n        if (selectedAnswer) {\n          totalScoreD += selectedAnswer.scoreValueD;\n          totalScoreI += selectedAnswer.scoreValueI;\n          totalScoreS += selectedAnswer.scoreValueS;\n          totalScoreC += selectedAnswer.scoreValueC;\n        }\n      }\n    }\n    return {\n      scoreValueD: totalScoreD,\n      scoreValueI: totalScoreI,\n      scoreValueS: totalScoreS,\n      scoreValueC: totalScoreC\n    };\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const totalScore = calculateTotalScore();\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.post(\"http://localhost:5162/api/TotalScores\", totalScore, config);\n      console.log(response.data);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error(\"Failed to submit total score:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reaction-form\",\n    children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-options\",\n          children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: answer.id.toString(),\n              name: question.id.toString(),\n              value: answer.id,\n              checked: answers[question.id] === answer.id,\n              onChange: () => handleAnswerChange(question.id, answer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: answer.id.toString(),\n              children: answer.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, answer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No questions loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionForm, \"N91DSdBlXqQQRV9HsVDLm8OSnc8=\", false, function () {\n  return [useNavigate];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","QuestionForm","_s","questions","setQuestions","answers","setAnswers","navigate","fetchQuestions","result","get","data","error","console","handleAnswerChange","questionId","answerId","prevAnswers","calculateTotalScore","totalScoreD","totalScoreI","totalScoreS","totalScoreC","question","id","selectedAnswer","find","answer","scoreValueD","scoreValueI","scoreValueS","scoreValueC","handleSubmit","event","preventDefault","totalScore","token","localStorage","getItem","config","headers","Authorization","response","post","log","className","children","length","onSubmit","map","questionText","fileName","_jsxFileName","lineNumber","columnNumber","type","toString","name","value","checked","onChange","htmlFor","answerText","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ReactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../Css/ReactionForm.css';\r\n\r\nconst QuestionForm = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const result = await axios.get(\"http://localhost:5162/api/Questions\");\r\n        setQuestions(result.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch questions:', error);\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionId, answerId) => {\r\n    setAnswers(prevAnswers => ({\r\n      ...prevAnswers,\r\n      [questionId]: answerId\r\n    }));\r\n  };\r\n\r\n  const calculateTotalScore = () => {\r\n    let totalScoreD = 0;\r\n    let totalScoreI = 0;\r\n    let totalScoreS = 0;\r\n    let totalScoreC = 0;\r\n\r\n    for (let question of questions) {\r\n      const answerId = answers[question.id];\r\n      if (answerId) {\r\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\r\n        if (selectedAnswer) {\r\n          totalScoreD += selectedAnswer.scoreValueD;\r\n          totalScoreI += selectedAnswer.scoreValueI;\r\n          totalScoreS += selectedAnswer.scoreValueS;\r\n          totalScoreC += selectedAnswer.scoreValueC;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      scoreValueD: totalScoreD,\r\n      scoreValueI: totalScoreI,\r\n      scoreValueS: totalScoreS,\r\n      scoreValueC: totalScoreC\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const totalScore = calculateTotalScore();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      };\r\n      const response = await axios.post(\r\n        \"http://localhost:5162/api/TotalScores\",\r\n        totalScore,\r\n        config\r\n      );\r\n      console.log(response.data);\r\n\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error(\"Failed to submit total score:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reaction-form\">\r\n      {questions.length > 0 ? (\r\n        <form onSubmit={handleSubmit}>\r\n          {questions.map((question) => (\r\n            <div key={question.id}>\r\n              <h3>{question.questionText}</h3>\r\n              <div className=\"answer-options\">\r\n                {question.answers.map((answer) => (\r\n                  <div key={answer.id} className=\"answer-option\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id={answer.id.toString()}\r\n                      name={question.id.toString()}\r\n                      value={answer.id}\r\n                      checked={answers[question.id] === answer.id}\r\n                      onChange={() => handleAnswerChange(question.id, answer.id)}\r\n                    />\r\n                    <label htmlFor={answer.id.toString()}>{answer.answerText}</label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      ) : (\r\n        <div>No questions loaded</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,qCAAqC,CAAC;QACrEN,YAAY,CAACK,MAAM,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;IACnDV,UAAU,CAACW,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,WAAW,GAAG,CAAC;IAEnB,KAAK,IAAIC,QAAQ,IAAIpB,SAAS,EAAE;MAC9B,MAAMa,QAAQ,GAAGX,OAAO,CAACkB,QAAQ,CAACC,EAAE,CAAC;MACrC,IAAIR,QAAQ,EAAE;QACZ,MAAMS,cAAc,GAAGF,QAAQ,CAAClB,OAAO,CAACqB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKR,QAAQ,CAAC;QAC9E,IAAIS,cAAc,EAAE;UAClBN,WAAW,IAAIM,cAAc,CAACG,WAAW;UACzCR,WAAW,IAAIK,cAAc,CAACI,WAAW;UACzCR,WAAW,IAAII,cAAc,CAACK,WAAW;UACzCR,WAAW,IAAIG,cAAc,CAACM,WAAW;QAC3C;MACF;IACF;IAEA,OAAO;MACLH,WAAW,EAAET,WAAW;MACxBU,WAAW,EAAET,WAAW;MACxBU,WAAW,EAAET,WAAW;MACxBU,WAAW,EAAET;IACf,CAAC;EACH,CAAC;EAED,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,UAAU,GAAGjB,mBAAmB,CAAC,CAAC;IAExC,IAAI;MACF,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE;MAC9C,CAAC;MACD,MAAMM,QAAQ,GAAG,MAAM7C,KAAK,CAAC8C,IAAI,CAC/B,uCAAuC,EACvCR,UAAU,EACVI,MACF,CAAC;MACD1B,OAAO,CAAC+B,GAAG,CAACF,QAAQ,CAAC/B,IAAI,CAAC;MAE1BJ,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK6C,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3B3C,SAAS,CAAC4C,MAAM,GAAG,CAAC,gBACnB/C,OAAA;MAAMgD,QAAQ,EAAEhB,YAAa;MAAAc,QAAA,GAC1B3C,SAAS,CAAC8C,GAAG,CAAE1B,QAAQ,iBACtBvB,OAAA;QAAA8C,QAAA,gBACE9C,OAAA;UAAA8C,QAAA,EAAKvB,QAAQ,CAAC2B;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChCtD,OAAA;UAAK6C,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BvB,QAAQ,CAAClB,OAAO,CAAC4C,GAAG,CAAEtB,MAAM,iBAC3B3B,OAAA;YAAqB6C,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5C9C,OAAA;cACEuD,IAAI,EAAC,OAAO;cACZ/B,EAAE,EAAEG,MAAM,CAACH,EAAE,CAACgC,QAAQ,CAAC,CAAE;cACzBC,IAAI,EAAElC,QAAQ,CAACC,EAAE,CAACgC,QAAQ,CAAC,CAAE;cAC7BE,KAAK,EAAE/B,MAAM,CAACH,EAAG;cACjBmC,OAAO,EAAEtD,OAAO,CAACkB,QAAQ,CAACC,EAAE,CAAC,KAAKG,MAAM,CAACH,EAAG;cAC5CoC,QAAQ,EAAEA,CAAA,KAAM9C,kBAAkB,CAACS,QAAQ,CAACC,EAAE,EAAEG,MAAM,CAACH,EAAE;YAAE;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eACFtD,OAAA;cAAO6D,OAAO,EAAElC,MAAM,CAACH,EAAE,CAACgC,QAAQ,CAAC,CAAE;cAAAV,QAAA,EAAEnB,MAAM,CAACmC;YAAU;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GATzD3B,MAAM,CAACH,EAAE;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAhBE/B,QAAQ,CAACC,EAAE;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBhB,CACN,CAAC,eACFtD,OAAA;QAAQuD,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,gBAEPtD,OAAA;MAAA8C,QAAA,EAAK;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpD,EAAA,CAzGID,YAAY;EAAA,QAGCH,WAAW;AAAA;AAAAiE,EAAA,GAHxB9D,YAAY;AA2GlB,eAAeA,YAAY;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}