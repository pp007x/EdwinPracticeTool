{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\Admin\\\\AdminNewQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport yaml from 'js-yaml';\nimport config from '../../config';\nimport DashboardSidebar from './AdminSidebar';\nimport styles from '../../Css/Dashboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    title\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.header,\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"page-title\"],\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = Header;\nfunction AdminNewQuestion() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileUpload = async event => {\n    setLoading(true);\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const yamlText = e.target.result;\n      const questions = yaml.load(yamlText);\n      setQuestions(questions);\n      try {\n        const response = await fetch(`${config.API_BASE_URL}/api/YamlUpload`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(questions)\n        });\n        if (response.ok) {\n          alert(\"Data successfully uploaded\");\n        } else {\n          alert(\"Failed to upload data\");\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Admin New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminNewQuestion, \"KZp68kCF9eziSZDsKNRO+w6tex8=\");\n_c2 = AdminNewQuestion;\nexport default AdminNewQuestion;\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"AdminNewQuestion\");","map":{"version":3,"names":["React","useState","yaml","config","DashboardSidebar","styles","jsxDEV","_jsxDEV","Header","_ref","title","className","header","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminNewQuestion","_s","questions","setQuestions","loading","setLoading","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","yamlText","result","load","response","fetch","API_BASE_URL","method","headers","body","JSON","stringify","ok","alert","error","console","readAsText","dashboard","main","type","onChange","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/Admin/AdminNewQuestions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport yaml from 'js-yaml';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/Dashboard.module.css';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminNewQuestion() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFileUpload = async (event) => {\r\n        setLoading(true);\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const yamlText = e.target.result;\r\n            const questions = yaml.load(yamlText);\r\n            setQuestions(questions);\r\n\r\n            try {\r\n                const response = await fetch(`${config.API_BASE_URL}/api/YamlUpload`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(questions)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    alert(\"Data successfully uploaded\");\r\n                } else {\r\n                    alert(\"Failed to upload data\");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dashboard}>\r\n          <DashboardSidebar />\r\n          <div className={styles.main}>\r\n            <Header title=\"Admin New Question\" />\r\n            <input type=\"file\" onChange={handleFileUpload} disabled={loading} />\r\n            {/* Render your questions here */}\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminNewQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}