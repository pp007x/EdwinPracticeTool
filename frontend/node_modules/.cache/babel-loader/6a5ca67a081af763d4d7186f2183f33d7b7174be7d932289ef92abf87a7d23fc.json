{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import jwtDecode from'jwt-decode';import{useNavigate}from'react-router-dom';// import useNavigate\nimport styles from'../Css/LoginForm.module.css';import config from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ResetPasswordForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var navigate=useNavigate();// initialize useNavigate\nvar handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var decodedToken,userId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}setError(\"Passwords do not match\");return _context.abrupt(\"return\");case 4:decodedToken=jwtDecode(token);userId=decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'];_context.prev=6;_context.next=9;return axios.post(\"\".concat(config.API_BASE_URL,\"/api/Users/ResetPassword\"),{userId:userId,resetToken:token,newPassword:password});case 9:setError(\"Password reset successfully!\");_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](6);setError(\"An error occurred\");case 15:case\"end\":return _context.stop();}},_callee,null,[[6,12]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:styles.loginFormWrapper,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.inputBox,children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.form,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Token:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:token,onChange:function onChange(e){return setToken(e.target.value);},className:styles.input}),/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"New Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},className:styles.input}),/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);},className:styles.input}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.loginButton,children:\"Reset Password\"})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.loginButton,onClick:function onClick(){return navigate('/login');},children:\"Back to Login\"}),\" \",error&&/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:error})]})});}export default ResetPasswordForm;","map":{"version":3,"names":["React","useState","axios","jwtDecode","useNavigate","styles","config","jsx","_jsx","jsxs","_jsxs","ResetPasswordForm","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","error","setError","navigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","decodedToken","userId","wrap","_callee$","_context","prev","next","preventDefault","abrupt","post","concat","API_BASE_URL","resetToken","newPassword","t0","stop","_x","apply","arguments","className","loginFormWrapper","children","inputBox","onSubmit","form","label","type","value","onChange","target","input","loginButton","onClick"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ResetPasswordForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport { useNavigate } from 'react-router-dom'; // import useNavigate\r\nimport styles from '../Css/LoginForm.module.css';\r\nimport config from '../config';\r\n\r\nfunction ResetPasswordForm() {\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate(); // initialize useNavigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    const decodedToken = jwtDecode(token);\r\n    const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'];\r\n\r\n    try {\r\n      await axios.post(`${config.API_BASE_URL}/api/Users/ResetPassword`, {\r\n        userId,\r\n        resetToken: token,\r\n        newPassword: password\r\n      });\r\n\r\n      setError(\"Password reset successfully!\");\r\n    } catch (error) {\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Token:</label>\r\n          <input type=\"text\" value={token} onChange={e => setToken(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>New Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>Confirm Password:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className={styles.input} />\r\n\r\n          <button type=\"submit\" className={styles.loginButton}>Reset Password</button>\r\n        </form>\r\n        <button className={styles.loginButton} onClick={() => navigate('/login')}>Back to Login</button> {/* Add the back to login button */}\r\n        {error && <div className={styles.error}>{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}