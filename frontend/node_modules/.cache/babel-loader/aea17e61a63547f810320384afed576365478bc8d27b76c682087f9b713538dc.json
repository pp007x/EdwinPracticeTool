{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ResetPasswordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from 'jwt-decode'; // import jwtDecode\nimport styles from '../Css/LoginForm.module.css'; // import your CSS file as a module\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordForm() {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    // Decode the token to get user id\n    const decodedToken = jwtDecode(token);\n    const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\n\n    try {\n      await axios.post(`${config.API_BASE_URL}/api/Users/ResetPassword`, {\n        userId,\n        resetToken: token,\n        newPassword: password\n      });\n      setError(\"Password reset successfully!\");\n    } catch (error) {\n      setError(\"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginFormWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBox,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Token:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: token,\n          onChange: e => setToken(e.target.value),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.loginButton,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordForm, \"/V7fwhXHgfI2HgzIheg5Y9wK2RI=\");\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["React","useState","axios","jwtDecode","styles","config","jsxDEV","_jsxDEV","ResetPasswordForm","_s","token","setToken","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleSubmit","e","preventDefault","decodedToken","userId","post","API_BASE_URL","resetToken","newPassword","className","loginFormWrapper","children","inputBox","onSubmit","form","label","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","input","loginButton","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ResetPasswordForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from 'jwt-decode'; // import jwtDecode\r\nimport styles from '../Css/LoginForm.module.css'; // import your CSS file as a module\r\nimport config from '../config';\r\n\r\nfunction ResetPasswordForm() {\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    // Decode the token to get user id\r\n    const decodedToken = jwtDecode(token);\r\n    const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\r\n\r\n    try {\r\n      await axios.post(`${config.API_BASE_URL}/api/Users/ResetPassword`, {\r\n        userId,\r\n        resetToken: token,\r\n        newPassword: password\r\n      });\r\n\r\n      setError(\"Password reset successfully!\");\r\n    } catch (error) {\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Token:</label>\r\n          <input type=\"text\" value={token} onChange={e => setToken(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>New Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>Confirm Password:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className={styles.input} />\r\n\r\n          <button type=\"submit\" className={styles.loginButton}>Reset Password</button>\r\n        </form>\r\n        {error && <div className={styles.error}>{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}