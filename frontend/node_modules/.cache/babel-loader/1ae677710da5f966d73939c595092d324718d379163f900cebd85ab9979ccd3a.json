{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ReactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionForm() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [userId, setUserId] = useState(\"\"); // Get from jwtDecode\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const result = await axios.get(\"http://localhost:5162/api/Questions\");\n      setQuestions(result.data);\n      // Initialize answers state with each question id\n      let initialAnswers = {};\n      result.data.forEach(question => initialAnswers[question.Id] = null);\n      setAnswers(initialAnswers);\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerChange = (questionId, answerId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answerId\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let scores = [];\n    for (let questionId in answers) {\n      scores.push({\n        QuestionId: questionId,\n        AnswerId: answers[questionId],\n        UserId: userId\n      });\n    }\n    try {\n      await axios.post(\"http://localhost:5162/api/TotalScores\", scores);\n      alert(\"Scores submitted successfully!\");\n    } catch (error) {\n      console.error(\"Error in submitting scores: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.QuestionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), question.Answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: answer.Id,\n            name: question.Id,\n            value: answer.Id,\n            checked: answers[question.Id] === answer.Id,\n            onChange: () => handleAnswerChange(question.Id, answer.Id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: answer.AnswerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, answer.Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this))]\n      }, question.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionForm, \"5WVXwPqWakIpLW8PlSBQIsqQK9o=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","QuestionForm","_s","questions","setQuestions","answers","setAnswers","userId","setUserId","fetchQuestions","result","get","data","initialAnswers","forEach","question","Id","handleAnswerChange","questionId","answerId","handleSubmit","e","preventDefault","scores","push","QuestionId","AnswerId","UserId","post","alert","error","console","children","onSubmit","map","QuestionText","fileName","_jsxFileName","lineNumber","columnNumber","Answers","answer","type","id","name","value","checked","onChange","AnswerText","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ReactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction QuestionForm() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [userId, setUserId] = useState(\"\"); // Get from jwtDecode\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      const result = await axios.get(\"http://localhost:5162/api/Questions\");\r\n      setQuestions(result.data);\r\n      // Initialize answers state with each question id\r\n      let initialAnswers = {};\r\n      result.data.forEach((question) => (initialAnswers[question.Id] = null));\r\n      setAnswers(initialAnswers);\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionId, answerId) => {\r\n    setAnswers({ ...answers, [questionId]: answerId });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let scores = [];\r\n    for (let questionId in answers) {\r\n      scores.push({\r\n        QuestionId: questionId,\r\n        AnswerId: answers[questionId],\r\n        UserId: userId,\r\n      });\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5162/api/TotalScores\", scores);\r\n      alert(\"Scores submitted successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error in submitting scores: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questions && (\r\n        <form onSubmit={handleSubmit}>\r\n            {questions.map((question) => (\r\n    <div key={question.Id}>\r\n      <h3>{question.QuestionText}</h3>\r\n      {question.Answers.map((answer) => (\r\n        <div key={answer.Id}>\r\n          <input\r\n            type=\"radio\"\r\n            id={answer.Id}\r\n            name={question.Id}\r\n            value={answer.Id}\r\n            checked={answers[question.Id] === answer.Id}\r\n            onChange={() => handleAnswerChange(question.Id, answer.Id)}\r\n          />\r\n          <label>{answer.AnswerText}</label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ))}\r\n  <button type=\"submit\">Submit</button>\r\n</form>\r\n\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}