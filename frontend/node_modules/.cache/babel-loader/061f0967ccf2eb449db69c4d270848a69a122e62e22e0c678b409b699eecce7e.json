{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ReactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../Css/ReactionForm.module.css';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactionForm = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProfileAndQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const localConfig = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n\n        // Fetch the profile data\n        const profileResponse = await axios.get(`${config.API_BASE_URL}/api/Users/Profile`, localConfig);\n\n        // Use the CompanyId from the profile data to fetch the questions\n        const questionsResponse = await axios.get(`${config.API_BASE_URL}/api/ReactionForm?companyId=${profileResponse.data.companyId}`, localConfig);\n\n        // Store the UserId\n        setUserId(profileResponse.data.id);\n        setQuestions(questionsResponse.data);\n      } catch (error) {\n        console.error('Failed to fetch profile or questions:', error);\n      }\n    };\n    fetchProfileAndQuestions();\n  }, []);\n  const handleAnswerChange = (questionId, answerId) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: answerId\n    }));\n  };\n  const calculateTotalScore = () => {\n    let totalScoreD = 0;\n    let totalScoreI = 0;\n    let totalScoreS = 0;\n    let totalScoreC = 0;\n    for (let question of questions) {\n      const answerId = answers[question.id];\n      if (answerId) {\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\n        if (selectedAnswer) {\n          totalScoreD += selectedAnswer.scoreValueD;\n          totalScoreI += selectedAnswer.scoreValueI;\n          totalScoreS += selectedAnswer.scoreValueS;\n          totalScoreC += selectedAnswer.scoreValueC;\n        }\n      }\n    }\n    return {\n      scoreValueD: totalScoreD,\n      scoreValueI: totalScoreI,\n      scoreValueS: totalScoreS,\n      scoreValueC: totalScoreC,\n      userId: userId\n    };\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const totalScore = calculateTotalScore();\n    try {\n      const token = localStorage.getItem('token');\n      const localConfig = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.post(`${config.API_BASE_URL}/api/TotalScores`, totalScore, localConfig);\n      console.log(response.data);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error(\"Failed to submit total score:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"bodyform\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"form-control\"],\n      children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles[\"reactionform\"],\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Vragenlijst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"questionform\"],\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [question.questionText, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"answer-options\"],\n              children: question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles[\"answerform\"],\n                htmlFor: answer.id.toString(),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: answer.id.toString(),\n                  name: question.id.toString(),\n                  value: answer.id,\n                  onChange: () => handleAnswerChange(question.id, answer.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this), answer.answerText]\n              }, answer.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"button\"],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactionForm, \"kuyUrI3l4Ix5wvWK+dWhGqce+/U=\", false, function () {\n  return [useNavigate];\n});\n_c = ReactionForm;\nexport default ReactionForm;\nvar _c;\n$RefreshReg$(_c, \"ReactionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","styles","config","jsxDEV","_jsxDEV","ReactionForm","_s","questions","setQuestions","answers","setAnswers","userId","setUserId","navigate","fetchProfileAndQuestions","token","localStorage","getItem","localConfig","headers","Authorization","profileResponse","get","API_BASE_URL","questionsResponse","data","companyId","id","error","console","handleAnswerChange","questionId","answerId","prevAnswers","calculateTotalScore","totalScoreD","totalScoreI","totalScoreS","totalScoreC","question","selectedAnswer","find","answer","scoreValueD","scoreValueI","scoreValueS","scoreValueC","handleSubmit","event","preventDefault","totalScore","response","post","log","className","children","length","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","questionText","htmlFor","toString","type","name","value","onChange","answerText","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ReactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from '../Css/ReactionForm.module.css';\r\nimport config from '../config';\r\n\r\nconst ReactionForm = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileAndQuestions = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const localConfig = {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        };\r\n        \r\n        // Fetch the profile data\r\n        const profileResponse = await axios.get(`${config.API_BASE_URL}/api/Users/Profile`, localConfig);\r\n        \r\n        // Use the CompanyId from the profile data to fetch the questions\r\n        const questionsResponse = await axios.get(`${config.API_BASE_URL}/api/ReactionForm?companyId=${profileResponse.data.companyId}`, localConfig);\r\n        \r\n        // Store the UserId\r\n        setUserId(profileResponse.data.id);\r\n\r\n        setQuestions(questionsResponse.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch profile or questions:', error);\r\n      }\r\n    };\r\n    fetchProfileAndQuestions();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionId, answerId) => {\r\n    setAnswers(prevAnswers => ({\r\n      ...prevAnswers,\r\n      [questionId]: answerId\r\n    }));\r\n  };\r\n\r\n  const calculateTotalScore = () => {\r\n    let totalScoreD = 0;\r\n    let totalScoreI = 0;\r\n    let totalScoreS = 0;\r\n    let totalScoreC = 0;\r\n\r\n    for (let question of questions) {\r\n      const answerId = answers[question.id];\r\n      if (answerId) {\r\n        const selectedAnswer = question.answers.find(answer => answer.id === answerId);\r\n        if (selectedAnswer) {\r\n          totalScoreD += selectedAnswer.scoreValueD;\r\n          totalScoreI += selectedAnswer.scoreValueI;\r\n          totalScoreS += selectedAnswer.scoreValueS;\r\n          totalScoreC += selectedAnswer.scoreValueC;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      scoreValueD: totalScoreD,\r\n      scoreValueI: totalScoreI,\r\n      scoreValueS: totalScoreS,\r\n      scoreValueC: totalScoreC,\r\n      userId: userId\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const totalScore = calculateTotalScore();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const localConfig = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      };\r\n      const response = await axios.post(\r\n        `${config.API_BASE_URL}/api/TotalScores`,\r\n        totalScore,\r\n        localConfig\r\n      );\r\n      console.log(response.data);\r\n\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error(\"Failed to submit total score:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"bodyform\"]}>\r\n    <div className={styles[\"form-control\"]}>\r\n      {questions.length > 0 ? (\r\n        <form className={styles[\"reactionform\"]} onSubmit={handleSubmit}>\r\n          <h1>Vragenlijst</h1>\r\n          {questions.map((question) => (\r\n            <div className={styles[\"questionform\"]} key={question.id}>\r\n              <label>\r\n                {question.questionText}\r\n                <div className={styles[\"answer-options\"]}>\r\n                  {question.answers.map((answer) => (\r\n                    <label className={styles[\"answerform\"]} htmlFor={answer.id.toString()} key={answer.id}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={answer.id.toString()}\r\n                        name={question.id.toString()}\r\n                        value={answer.id}\r\n                        onChange={() => handleAnswerChange(question.id, answer.id)}\r\n                      />\r\n                      {answer.answerText}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n          <div className={styles[\"button\"]}>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <p>There are no questions</p>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}