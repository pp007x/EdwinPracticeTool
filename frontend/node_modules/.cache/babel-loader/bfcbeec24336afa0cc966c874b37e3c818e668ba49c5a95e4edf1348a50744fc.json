{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport ascending from \"./ascending.js\";\nexport default function least(values) {\n  var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending;\n  var min;\n  var defined = false;\n  if (compare.length === 1) {\n    var minValue;\n    var _iterator = _createForOfIteratorHelper(values),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var element = _step.value;\n        var value = compare(element);\n        if (defined ? ascending(value, minValue) < 0 : ascending(value, value) === 0) {\n          min = element;\n          minValue = value;\n          defined = true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var _iterator2 = _createForOfIteratorHelper(values),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        if (defined ? compare(_value, min) < 0 : compare(_value, _value) === 0) {\n          min = _value;\n          defined = true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return min;\n}","map":{"version":3,"names":["ascending","least","values","compare","arguments","length","undefined","min","defined","minValue","_iterator","_createForOfIteratorHelper","_step","s","n","done","element","value","err","e","f","_iterator2","_step2"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/node_modules/d3-array/src/least.js"],"sourcesContent":["import ascending from \"./ascending.js\";\r\n\r\nexport default function least(values, compare = ascending) {\r\n  let min;\r\n  let defined = false;\r\n  if (compare.length === 1) {\r\n    let minValue;\r\n    for (const element of values) {\r\n      const value = compare(element);\r\n      if (defined\r\n          ? ascending(value, minValue) < 0\r\n          : ascending(value, value) === 0) {\r\n        min = element;\r\n        minValue = value;\r\n        defined = true;\r\n      }\r\n    }\r\n  } else {\r\n    for (const value of values) {\r\n      if (defined\r\n          ? compare(value, min) < 0\r\n          : compare(value, value) === 0) {\r\n        min = value;\r\n        defined = true;\r\n      }\r\n    }\r\n  }\r\n  return min;\r\n}\r\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,gBAAgB;AAEtC,eAAe,SAASC,KAAKA,CAACC,MAAM,EAAuB;EAAA,IAArBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,SAAS;EACvD,IAAIO,GAAG;EACP,IAAIC,OAAO,GAAG,KAAK;EACnB,IAAIL,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IACxB,IAAII,QAAQ;IAAC,IAAAC,SAAA,GAAAC,0BAAA,CACST,MAAM;MAAAU,KAAA;IAAA;MAA5B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8B;QAAA,IAAnBC,OAAO,GAAAJ,KAAA,CAAAK,KAAA;QAChB,IAAMA,KAAK,GAAGd,OAAO,CAACa,OAAO,CAAC;QAC9B,IAAIR,OAAO,GACLR,SAAS,CAACiB,KAAK,EAAER,QAAQ,CAAC,GAAG,CAAC,GAC9BT,SAAS,CAACiB,KAAK,EAAEA,KAAK,CAAC,KAAK,CAAC,EAAE;UACnCV,GAAG,GAAGS,OAAO;UACbP,QAAQ,GAAGQ,KAAK;UAChBT,OAAO,GAAG,IAAI;QAChB;MACF;IAAC,SAAAU,GAAA;MAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;IAAA;MAAAR,SAAA,CAAAU,CAAA;IAAA;EACH,CAAC,MAAM;IAAA,IAAAC,UAAA,GAAAV,0BAAA,CACeT,MAAM;MAAAoB,MAAA;IAAA;MAA1B,KAAAD,UAAA,CAAAR,CAAA,MAAAS,MAAA,GAAAD,UAAA,CAAAP,CAAA,IAAAC,IAAA,GAA4B;QAAA,IAAjBE,MAAK,GAAAK,MAAA,CAAAL,KAAA;QACd,IAAIT,OAAO,GACLL,OAAO,CAACc,MAAK,EAAEV,GAAG,CAAC,GAAG,CAAC,GACvBJ,OAAO,CAACc,MAAK,EAAEA,MAAK,CAAC,KAAK,CAAC,EAAE;UACjCV,GAAG,GAAGU,MAAK;UACXT,OAAO,GAAG,IAAI;QAChB;MACF;IAAC,SAAAU,GAAA;MAAAG,UAAA,CAAAF,CAAA,CAAAD,GAAA;IAAA;MAAAG,UAAA,CAAAD,CAAA;IAAA;EACH;EACA,OAAOb,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}