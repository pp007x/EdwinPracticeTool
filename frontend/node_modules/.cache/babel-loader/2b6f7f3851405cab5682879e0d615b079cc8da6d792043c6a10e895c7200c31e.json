{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\EdwinPracticeTool\\\\frontend\\\\src\\\\components\\\\ReactionForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAnswerChange = (questionId, answerId) => {\n      this.setState(prevState => ({\n        answers: {\n          ...prevState.answers,\n          [questionId]: answerId\n        }\n      }));\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      // Do something with this.state.answers here\n\n      // After form submission, redirect to /dashboard\n      navigate('/dashboard');\n    };\n    this.state = {\n      questions: [],\n      answers: {}\n    };\n  }\n  async componentDidMount() {\n    try {\n      const result = await axios.get(\"http://localhost:5162/api/Questions\");\n      this.setState({\n        questions: result.data\n      });\n    } catch (error) {\n      console.error('Failed to fetch questions:', error);\n    }\n  }\n  render() {\n    const {\n      questions,\n      answers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: answer.id.toString(),\n              name: question.id.toString(),\n              value: answer.id,\n              checked: answers[question.id] === answer.id,\n              onChange: () => this.handleAnswerChange(question.id, answer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: answer.id.toString(),\n              children: answer.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, answer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No questions loaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(QuestionForm); // Wrap the component with withRouter\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","axios","useNavigate","jsxDEV","_jsxDEV","QuestionForm","Component","constructor","props","handleAnswerChange","questionId","answerId","setState","prevState","answers","handleSubmit","event","preventDefault","navigate","state","questions","componentDidMount","result","get","data","error","console","render","children","length","onSubmit","map","question","questionText","fileName","_jsxFileName","lineNumber","columnNumber","answer","type","id","toString","name","value","checked","onChange","htmlFor","answerText","_c","withRouter","$RefreshReg$"],"sources":["C:/Users/steph/Documents/EdwinPracticeTool/frontend/src/components/ReactionForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nclass QuestionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      answers: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const result = await axios.get(\"http://localhost:5162/api/Questions\");\r\n      this.setState({ questions: result.data });\r\n    } catch (error) {\r\n      console.error('Failed to fetch questions:', error);\r\n    }\r\n  }\r\n\r\n  handleAnswerChange = (questionId, answerId) => {\r\n    this.setState(prevState => ({\r\n      answers: {\r\n        ...prevState.answers,\r\n        [questionId]: answerId\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Do something with this.state.answers here\r\n\r\n    // After form submission, redirect to /dashboard\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  render() {\r\n    const { questions, answers } = this.state;\r\n    return (\r\n      <div>\r\n        {questions.length > 0 ? (\r\n          <form onSubmit={this.handleSubmit}>\r\n            {questions.map((question) => (\r\n              <div key={question.id}>\r\n                <h3>{question.questionText}</h3>\r\n                {question.answers.map((answer) => (\r\n                  <div key={answer.id}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id={answer.id.toString()}\r\n                      name={question.id.toString()}\r\n                      value={answer.id}\r\n                      checked={answers[question.id] === answer.id}\r\n                      onChange={() => this.handleAnswerChange(question.id, answer.id)}\r\n                    />\r\n                    <label htmlFor={answer.id.toString()}>{answer.answerText}</label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        ) : (\r\n          <div>No questions loaded</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(QuestionForm); // Wrap the component with withRouter\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}