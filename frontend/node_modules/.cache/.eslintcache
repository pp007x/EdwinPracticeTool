[{"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\index.js":"1","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\App.js":"2","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ReactionForm.js":"4","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\LoginForm.js":"5","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Protectedroute.js":"6","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Dashboard.js":"7","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\RegisterForm.js":"8","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardCompany.js":"9","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Logout.js":"10","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardSidebar.js":"11","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardHeader.js":"12","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\index.js":"13","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\App.js":"14","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\reportWebVitals.js":"15","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\LoginForm.js":"16","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\ReactionForm.js":"17","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Protectedroute.js":"18","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\RegisterForm.js":"19","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Dashboard.js":"20","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardCompany.js":"21","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Logout.js":"22","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardSidebar.js":"23","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardHeader.js":"24","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\Adminpage.js":"25","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AddCompany.js":"26","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminSidebar.js":"27","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminHeader.js":"28","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCreateUser.js":"29","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\config.js":"30","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCompanyDashboard.js":"31","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminUserDashboard.js":"32","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminNewQuestions.js":"33","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditQuestions.js":"34","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminAddQuestions.js":"35","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveUser.js":"36","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveCompany.js":"37","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditOnderwerp.js":"38","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoPagina.js":"39","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminResetPassword.js":"40","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ResetPasswordForm.js":"41","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\json.js":"42","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoReactionForm.js":"43"},{"size":552,"mtime":1688156697445,"results":"44","hashOfConfig":"45"},{"size":3691,"mtime":1688565550825,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1688156697445,"results":"47","hashOfConfig":"45"},{"size":4266,"mtime":1688562740724,"results":"48","hashOfConfig":"45"},{"size":3282,"mtime":1688565534564,"results":"49","hashOfConfig":"45"},{"size":598,"mtime":1688156697440,"results":"50","hashOfConfig":"45"},{"size":4393,"mtime":1688563226848,"results":"51","hashOfConfig":"45"},{"size":3063,"mtime":1688565912048,"results":"52","hashOfConfig":"45"},{"size":6194,"mtime":1688565448677,"results":"53","hashOfConfig":"45"},{"size":483,"mtime":1688069441976,"results":"54","hashOfConfig":"45"},{"size":1294,"mtime":1688504949569,"results":"55","hashOfConfig":"45"},{"size":257,"mtime":1688392461082,"results":"56","hashOfConfig":"45"},{"size":552,"mtime":1688156697445,"results":"57","hashOfConfig":"58"},{"size":1238,"mtime":1688158033239,"results":"59","hashOfConfig":"58"},{"size":375,"mtime":1688156697445,"results":"60","hashOfConfig":"58"},{"size":2741,"mtime":1688157317773,"results":"61","hashOfConfig":"58"},{"size":2224,"mtime":1688156697440,"results":"62","hashOfConfig":"58"},{"size":598,"mtime":1688156697440,"results":"63","hashOfConfig":"58"},{"size":2572,"mtime":1688157685090,"results":"64","hashOfConfig":"58"},{"size":3890,"mtime":1688156697438,"results":"65","hashOfConfig":"58"},{"size":5290,"mtime":1688156697439,"results":"66","hashOfConfig":"58"},{"size":483,"mtime":1688156697440,"results":"67","hashOfConfig":"58"},{"size":984,"mtime":1688156697439,"results":"68","hashOfConfig":"58"},{"size":221,"mtime":1688156697439,"results":"69","hashOfConfig":"58"},{"size":1739,"mtime":1688513793485,"results":"70","hashOfConfig":"45"},{"size":2487,"mtime":1688561131803,"results":"71","hashOfConfig":"45"},{"size":3377,"mtime":1688560893613,"results":"72","hashOfConfig":"45"},{"size":270,"mtime":1688320102647,"results":"73","hashOfConfig":"45"},{"size":3627,"mtime":1688561110402,"results":"74","hashOfConfig":"45"},{"size":177,"mtime":1688571406907,"results":"75","hashOfConfig":"45"},{"size":7374,"mtime":1688561173896,"results":"76","hashOfConfig":"45"},{"size":6037,"mtime":1688563182426,"results":"77","hashOfConfig":"45"},{"size":3171,"mtime":1688562242816,"results":"78","hashOfConfig":"45"},{"size":8086,"mtime":1688564854283,"results":"79","hashOfConfig":"45"},{"size":6674,"mtime":1688565165477,"results":"80","hashOfConfig":"45"},{"size":3465,"mtime":1688561413109,"results":"81","hashOfConfig":"45"},{"size":2529,"mtime":1688561500470,"results":"82","hashOfConfig":"45"},{"size":3926,"mtime":1688561536217,"results":"83","hashOfConfig":"45"},{"size":1132,"mtime":1688566012460,"results":"84","hashOfConfig":"45"},{"size":2447,"mtime":1688561581626,"results":"85","hashOfConfig":"45"},{"size":2144,"mtime":1688571004195,"results":"86","hashOfConfig":"45"},{"size":633,"mtime":1688558014453,"results":"87","hashOfConfig":"45"},{"size":3225,"mtime":1688565846380,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"ef1nh3",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qd77vu",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\index.js",[],[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\App.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ReactionForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\LoginForm.js",["238"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport styles from '../Css/LoginForm.module.css';  // import your CSS file as a module\r\nimport logo from '../images/HigtechLogo.png';\r\nimport config from '../config';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${config.API_BASE_URL}/api/Authentication/Login`, data);\r\n\r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n\r\n      // Decode the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      \r\n      // Get the role and the user ID from the token\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n      const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\r\n\r\n      // Check user's scores\r\n      try {\r\n        const totalScoreResponse = await axios.get(`${config.API_BASE_URL}/api/TotalScores/user/me`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${response.data}`\r\n          }\r\n        });\r\n        \r\n        const totalScore = totalScoreResponse.data;\r\n\r\n        // If user's scores are null, navigate to /reactionform\r\n        if (!totalScore || totalScore === null) {\r\n          navigate('/reactionform');\r\n        } else {\r\n          // Navigate to the correct page based on the role\r\n          if (userRole === 'Admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n\r\n      } catch (error) {\r\n        navigate('/infoReactionForm');\r\n      }\r\n\r\n    } catch (error) {\r\n      setLoginError(\"Invalid username or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <img src={logo} alt=\"Logo\" className={styles.logo} /> \r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Username:</label>\r\n          <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" className={styles.input} />\r\n          <label className={styles.label}>Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" className={styles.input} />\r\n          {loginError && <div className={styles.error}>{loginError}</div>}\r\n          <button type=\"submit\" className={styles.loginButton}>Login</button>\r\n        </form>\r\n        <button className={styles.registerButton} onClick={() => navigate('/register')}>Register</button>\r\n        <button className={styles.resetPasswordButton} onClick={() => navigate('/resetpassword')}>Forgot Password?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Protectedroute.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Dashboard.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\RegisterForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardCompany.js",["239","240","241"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport styles from '../Css/CompanyDashboard.module.css'; // Add this line\r\nimport DashboardSidebar from './DashboardSidebar';\r\nimport DashboardHeader from './DashboardHeader';\r\n\r\nconst descriptions = [\r\n  \"Analyticus (C)\", \"Strateeg (Cd)\", \"Perfectionist (Cs)\", \"Raadgever (Ci)\",\r\n  \"Pionier (Dc)\", \"Beslisser (D)\", \"Doorzetter (Ds)\", \"Avonturier (Di)\",\r\n  \"Specialist (Sc)\", \"Doener (Sd)\", \"Dienstverlener (S)\", \"Helper (Si)\",\r\n  \"Diplomaat (Ic)\", \"Inspirator (Id)\", \"Bemiddelaar (Is)\", \"Entertainer (I)\"\r\n];\r\n\r\nconst boxCodeToIndex = {\r\n  \"C\": 0, \"D\": 1, \"S\": 2, \"I\": 3,\r\n  \"c\": 0, \"d\": 1, \"s\": 2, \"i\": 3,\r\n};\r\n\r\nconst CompanyDashboard = () => {\r\n  const [userBoxes, setUserBoxes] = useState([]);\r\n  const [userScores, setUserScores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBoxes = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies/1/users`);\r\n        const data = response.data;\r\n        // Ensure data is an array before setting it\r\n        setUserBoxes(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user boxes:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUserScores = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/TotalScores/all`);\r\n        const data = response.data;\r\n        // Ensure data is an array before setting it\r\n        setUserScores(Array.isArray(data) ? data : []);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error('Error fetching user scores:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserBoxes();\r\n    fetchUserScores();\r\n  }, []);\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className={styles.dashboard}>\r\n    <DashboardSidebar />\r\n    <div className={styles.main}>\r\n    <Header title=\"Company\" />\r\n\r\n        <div className={styles.content}>\r\n        <div className={styles.sidebarRight}>\r\n          <div className={styles[\"dashboard-title\"]}>\r\n            <h1>Company Dashboard</h1>\r\n            <p>Here is all the info of your company</p>\r\n          </div>\r\n\r\n          <div className={styles[\"dashboard-content\"]}>\r\n          <div className={styles[\"big-square-wrapper\"]}>\r\n              <div className={styles[\"big-square-container\"]}>\r\n                {['C', 'D', 'S', 'I'].map((letter, bigSquareIndex) => (\r\n                  <div className={`${styles[\"big-square\"]} ${styles[\"big-square-\" + (bigSquareIndex + 1)]}`} key={bigSquareIndex}>\r\n                    <p className={styles[\"corner-letter\"]}>{letter}</p>\r\n                    <div className={styles[\"small-squares\"]}>\r\n                    {[0, 1, 2, 3].map((smallSquareIndex) => {\r\n                      const descriptionIndex = bigSquareIndex * 4 + smallSquareIndex;\r\n                      const colorClass = `small-square-${descriptionIndex + 1}`;\r\n                      return (\r\n                        <div className={`${styles[\"small-square\"]} ${styles[colorClass]}`} key={smallSquareIndex}>\r\n                          <div className={styles[\"box-content\"]}>\r\n                            <p className={styles[\"description-name\"]}>{descriptions[descriptionIndex]}</p>\r\n                            {smallSquareIndex === 3 && bigSquareIndex === 0 && <p className={styles[\"indirect-label\"]}>Indirect</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 2 && <p className={styles[\"mens-label\"]}>Mens</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 1 && <p className={styles[\"taak-label\"]}>Taak</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 3 && <p className={styles[\"direct-label\"]}>Direct</p>}\r\n                            <div className={styles[\"score-container\"]}>\r\n                              {userBoxes\r\n                                .filter(user =>\r\n                                  console.log(bigSquareIndex) ||\r\n                                  typeof user.box === 'string' &&\r\n                                  user.box.length === 2 &&\r\n                                  boxCodeToIndex[user.box[0].toUpperCase()] === bigSquareIndex &&\r\n                                  boxCodeToIndex[user.box[1].toLowerCase()] === smallSquareIndex)\r\n                                .map((user, index) => (\r\n                                  <p className={styles[\"score-name\"]} key={index}>{user.username}</p>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles[\"participant-table-container\"]}>\r\n              <table className={styles[\"participant-table\"]}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Deelnemer</th>\r\n                    <th>D</th>\r\n                    <th>I</th>\r\n                    <th>S</th>\r\n                    <th>C</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userBoxes.map((user, index) => {\r\n                    const userScore = userScores.find(score => score.userId === user.id) || {};\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{user.username}</td>\r\n                        <td>{userScore.scoreValueD}</td>\r\n                        <td>{userScore.scoreValueI}</td>\r\n                        <td>{userScore.scoreValueS}</td>\r\n                        <td>{userScore.scoreValueC}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyDashboard;","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Logout.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\index.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\App.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\LoginForm.js",["242"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../Css/LoginForm.css';  // import your CSS file\r\nimport logo from '../images/HigtechLogo.png';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Login\", data);\r\n      \r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n  \r\n      // Get the role from the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n  \r\n      // Check user's scores\r\n      try {\r\n        const totalScoreResponse = await axios.get(\"http://localhost:5162/api/TotalScores/user\", {\r\n          headers: {\r\n            'Authorization': `Bearer ${response.data}`\r\n          }\r\n        });\r\n  \r\n        const totalScore = totalScoreResponse.data;\r\n  \r\n        // If user's scores are null, navigate to /reactionform\r\n        if (!totalScore || totalScore === null) {\r\n          navigate('/reactionform');\r\n        } else {\r\n          // Navigate to the correct page based on the role\r\n          if (userRole === 'Admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(\"Failed to get user's scores.\", error);\r\n      }\r\n  \r\n    } catch (error) {\r\n      setLoginError(\"Invalid username or password.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <img src={logo} alt=\"Logo\" className=\"logo\" /> {/* Add the logo */}\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"label\">Username:</label>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        <label className=\"label\">Password:</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        {loginError && <div className=\"error\">{loginError}</div>}\r\n        <button type=\"submit\" className=\"loginButton\">Login</button>\r\n      </form>\r\n      <button className=\"loginButton\" onClick={() => navigate('/register')}>Register</button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\ReactionForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Protectedroute.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\RegisterForm.js",["243"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../Css/LoginForm.css';  // import your CSS file\r\n\r\nfunction RegisterForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [companyCode, setCompanyCode] = useState(\"\");\r\n  const [registerError, setRegisterError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Register\", {\r\n        username,\r\n        password,\r\n        companyCode\r\n      });\r\n\r\n      localStorage.setItem('token', response.data);\r\n\r\n      handleLogin();\r\n\r\n    } catch (error) {\r\n      setRegisterError(\"Registration failed.\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Login\", data);\r\n      \r\n      localStorage.setItem('token', response.data);\r\n  \r\n      const decodedToken = jwtDecode(response.data);\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n  \r\n      if (userRole === 'Admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/reactionform');\r\n      }\r\n  \r\n    } catch (error) {\r\n      setRegisterError(\"Automatic login failed.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleReturnClick = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <button className=\"returnButton\" onClick={handleReturnClick}>Return</button>\r\n      <form onSubmit={handleRegisterSubmit}>\r\n        <label className=\"label\">Username:</label>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        <label className=\"label\">Password:</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        <label className=\"label\">Company Code:</label>\r\n        <input type=\"text\" value={companyCode} onChange={e => setCompanyCode(e.target.value)} placeholder=\"Company Code\" />\r\n        {registerError && <div className=\"error\">{registerError}</div>}\r\n        <button type=\"submit\" className=\"loginButton\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Dashboard.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardCompany.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Logout.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\Adminpage.js",["244","245","246","247"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport config from '../../config';\r\n\r\nfunction AdminPortal() {\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    isAdmin: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${config.API_BASE_URL}/api/Users`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setUsers(response.data);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewUser({\r\n      ...newUser,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleNewUserSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem('token');\r\n    await axios.post(`${config.API_BASE_URL}/api/Users`, newUser, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    const response = await axios.get(`${config.API_BASE_URL}/api/Users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dashboard} >\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n            <AdminHeader />\r\n            <div className={styles.content}>\r\n          <h1>Admin Portal</h1>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPortal;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AddCompany.js",["248"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport config from '../../config';\r\n\r\nfunction AddCompany() {\r\n  const [company, setCompany] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    code: Math.random().toString(36).substr(2, 10)\r\n  });\r\n\r\n  const [isCompanyAdded, setIsCompanyAdded] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setCompany({\r\n      ...company,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleNewCompanySubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', company.name);\r\n    formData.append('description', company.description);\r\n    formData.append('code', company.code);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`${config.API_BASE_URL}/api/Companies`, formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      setIsCompanyAdded(true);\r\n      setCompany({\r\n        name: \"\",\r\n        description: \"\",\r\n        code: Math.random().toString(36).substr(2, 10)\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n            <Header title=\"Add company\" />\r\n            <div className={styles.content}>\r\n          <h1>Add New Company</h1>\r\n          {isCompanyAdded && <p>Company added successfully!</p>}\r\n          <form onSubmit={handleNewCompanySubmit}>\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" name=\"name\" value={company.name} className={styles.inputField} onChange={handleInputChange} required />\r\n            </label>\r\n            <label>\r\n              Description:\r\n              <input type=\"text\" name=\"description\" className={styles.inputField} value={company.description} onChange={handleInputChange} />\r\n            </label>\r\n            <button type=\"submit\">Add Company</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCompany;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCreateUser.js",["249"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\nimport config from '../../config';\r\n\r\nfunction CreateUser() {\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    isAdmin: false,\r\n    companyId: \"\"\r\n  });\r\n\r\n  const [companies, setCompanies] = useState([]);\r\n  const [isUserAdded, setIsUserAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setCompanies(response.data);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"error: \" + error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    setNewUser({\r\n      ...newUser,\r\n      [e.target.name]: value\r\n    });\r\n  };\r\n\r\n  const handleNewUserSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`${config.API_BASE_URL}/api/Users`, newUser, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setIsUserAdded(true);\r\n      setNewUser({\r\n        username: \"\",\r\n        password: \"\",\r\n        isAdmin: false,\r\n        companyId: \"\"\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Add user\" />\r\n            <div className={styles.content}>\r\n          <h1>Create New User</h1>\r\n          {isUserAdded && <p>User added successfully!</p>}\r\n          <form onSubmit={handleNewUserSubmit}>\r\n            <label>\r\n              Username:\r\n              <input className={styles.inputField} type=\"text\" name=\"username\" value={newUser.username} onChange={handleInputChange} />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <input className={styles.inputField} type=\"password\" name=\"password\" value={newUser.password} onChange={handleInputChange} />\r\n            </label>\r\n\r\n            <label className={`${styles.longLabel}  ${styles.labelWithCheckbox}`}>\r\n            <span>Is Admin:</span>\r\n            <input className={`${styles.checkboxSize}`} type=\"checkbox\" name=\"isAdmin\" checked={newUser.isAdmin} onChange={handleInputChange} />\r\n          </label>\r\n\r\n          <label>\r\n            Company:\r\n            <select className={styles.dropdownMenu} name=\"companyId\" value={newUser.companyId} onChange={handleInputChange}>\r\n              <option value=\"\">Select company</option>\r\n              {companies && Array.isArray(companies) && companies.map((company) => (\r\n                <option key={company.id} value={company.id}>\r\n                  {company.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n            <button type=\"submit\">Create User</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\config.js",["250"],[],"let API_BASE_URL = \"\";\r\n\r\n\r\n// API_BASE_URL = \"http://localhost:5162\";\r\n\r\nAPI_BASE_URL = \"https://temptestedwin.azurewebsites.net\";\r\n\r\n\r\nexport default {\r\n    API_BASE_URL\r\n};\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCompanyDashboard.js",["251","252","253"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\n\r\nconst descriptions = [\r\n  \"Analyticus (C)\", \"Strateeg (Cd)\", \"Perfectionist (Cs)\", \"Raadgever (Ci)\",\r\n  \"Pionier (Dc)\", \"Beslisser (D)\", \"Doorzetter (Ds)\", \"Avonturier (Di)\",\r\n  \"Specialist (Sc)\", \"Doener (Sd)\", \"Dienstverlener (S)\", \"Helper (Si)\",\r\n  \"Diplomaat (Ic)\", \"Inspirator (Id)\", \"Bemiddelaar (Is)\", \"Entertainer (I)\"\r\n];\r\n\r\nconst boxCodeToIndex = {\r\n  \"C\": 0, \"D\": 1, \"S\": 2, \"I\": 3,\r\n  \"c\": 0, \"d\": 1, \"s\": 2, \"i\": 3,\r\n};\r\n\r\nconst AdminCompanyDashboard = () => {\r\n  const [userBoxes, setUserBoxes] = useState([]);\r\n  const [userScores, setUserScores] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`);\r\n        const data = response.data;\r\n        setCompanies(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching companies:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBoxes = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies/${selectedCompany}/users`);\r\n        const data = response.data;\r\n        setUserBoxes(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user boxes:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUserScores = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/TotalScores/all`);\r\n        const data = response.data;\r\n        setUserScores(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user scores:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedCompany) {\r\n      fetchUserBoxes();\r\n      fetchUserScores();\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Info per company\" />\r\n            <div className={styles.content}>\r\n            <div className={styles.sidebarRight}>\r\n                <div className={styles[\"dashboard-title\"]}>\r\n                    <h1>Company Dashboard</h1>\r\n                    <p>Welcome to the Company Dashboard page!</p>\r\n                </div>\r\n\r\n                <div className={styles[\"company-selection-container\"] }>\r\n                    <div>\r\n                        <label>Select a Company:</label>\r\n                        </div>\r\n                        <div>\r\n                        <select className={styles.dropdownMenu} onChange={(e) => setSelectedCompany(e.target.value)}>\r\n                            <option value=\"\">Select a company</option>\r\n                            {companies.map((company, index) =>\r\n                                <option key={index} value={company.id}>{company.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className={styles[\"dashboard-content\"]}>\r\n          <div className={styles[\"big-square-wrapper\"]}>\r\n              <div className={styles[\"big-square-container\"]}>\r\n                {['C', 'D', 'S', 'I'].map((letter, bigSquareIndex) => (\r\n                  <div className={`${styles[\"big-square\"]} ${styles[\"big-square-\" + (bigSquareIndex + 1)]}`} key={bigSquareIndex}>\r\n                    <p className={styles[\"corner-letter\"]}>{letter}</p>\r\n                    <div className={styles[\"small-squares\"]}>\r\n                    {[0, 1, 2, 3].map((smallSquareIndex) => {\r\n                      const descriptionIndex = bigSquareIndex * 4 + smallSquareIndex;\r\n                      const colorClass = `small-square-${descriptionIndex + 1}`;\r\n                      return (\r\n                        <div className={`${styles[\"small-square\"]} ${styles[colorClass]}`} key={smallSquareIndex}>\r\n                          <div className={styles[\"box-content\"]}>\r\n                            <p className={styles[\"description-name\"]}>{descriptions[descriptionIndex]}</p>\r\n                            {smallSquareIndex === 2 && bigSquareIndex === 0 && <p className={styles[\"indirect-label\"]}>Indirect</p>}\r\n                            {smallSquareIndex === 1 && bigSquareIndex === 2 && <p className={styles[\"mens-label\"]}>Mens</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 1 && <p className={styles[\"taak-label\"]}>Taak</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 3 && <p className={styles[\"direct-label\"]}>Direct</p>}\r\n                            <div className={styles[\"score-container\"]}>\r\n                              {userBoxes\r\n                                .filter(user =>\r\n                                  console.log(bigSquareIndex) ||\r\n                                  typeof user.box === 'string' &&\r\n                                  user.box.length === 2 &&\r\n                                  boxCodeToIndex[user.box[0].toUpperCase()] === bigSquareIndex &&\r\n                                  boxCodeToIndex[user.box[1].toLowerCase()] === smallSquareIndex)\r\n                                .map((user, index) => (\r\n                                  <p className={styles[\"score-name\"]} key={index}>{user.username}</p>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles[\"participant-table-container\"]}>\r\n              <table className={styles[\"participant-table\"]}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Deelnemer</th>\r\n                    <th>D</th>\r\n                    <th>I</th>\r\n                    <th>S</th>\r\n                    <th>C</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userBoxes.map((user, index) => {\r\n                    const userScore = userScores.find(score => score.userId === user.id) || {};\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{user.username}</td>\r\n                        <td>{userScore.scoreValueD}</td>\r\n                        <td>{userScore.scoreValueI}</td>\r\n                        <td>{userScore.scoreValueS}</td>\r\n                        <td>{userScore.scoreValueC}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCompanyDashboard;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminUserDashboard.js",["254","255"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport axios from 'axios';\r\nimport config from '../../config';\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [resultData, setResultData] = useState(null);\r\n  const [onderwerpData, setOnderwerpData] = useState(null);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`);\r\n        setCompanies(Array.isArray(response.data) ? response.data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching companies:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCompany) {\r\n      axios.get(`${config.API_BASE_URL}/api/Companies/${selectedCompany}/users`)\r\n        .then(response => {\r\n          setUsers(Array.isArray(response.data) ? response.data : []);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching users:', error);\r\n        });\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (selectedUser) {\r\n        fetch(`${config.API_BASE_URL}/api/TotalScores/user/${selectedUser}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n          })\r\n          \r\n        .then(response => response.ok ? response.json() : Promise.reject())\r\n        .then(serverData => {\r\n          setResultData(serverData);\r\n\r\n          const transformedData = [\r\n            {\r\n              subject: 'Dominant', A: serverData.scoreValueD,\r\n            },\r\n            {\r\n              subject: 'Invloedrijk', A: serverData.scoreValueI,\r\n            },\r\n            {\r\n              subject: 'Stabiel', A: serverData.scoreValueS,\r\n            },\r\n            {\r\n              subject: 'Consciëntieus', A: serverData.scoreValueC,\r\n            },\r\n          ];\r\n          setChartData(transformedData);\r\n\r\n          axios.get(`${config.API_BASE_URL}/api/Onderwerp/user/${selectedUser}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n            },\r\n          })\r\n          .then(response => {\r\n            setOnderwerpData(response.data);\r\n          })\r\n          .catch(error => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n          });\r\n        })\r\n        .catch(error => console.error('There has been a problem with your fetch operation:', error));\r\n    }\r\n  }, [selectedUser]);\r\n  const CustomizedAxisTick = ({ x, y, payload }) => {\r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">{payload.value}</text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title=\"Info per user\" />\r\n        <div className={styles.content}>\r\n          <div className={styles.sidebarRight}>\r\n            <h1>See user info</h1>\r\n            <label>Select a Company:</label>\r\n            <div>\r\n              <select className={styles.dropdownMenu} onChange={(e) => setSelectedCompany(e.target.value)}>\r\n                <option value=\"\">Select a company</option>\r\n                {companies.map((company, index) =>\r\n                  <option key={index} value={company.id}>{company.name}</option>\r\n                )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label>Select a User:</label>\r\n              <div>\r\n                <select className={styles.dropdownMenu} onChange={(e) => setSelectedUser(e.target.value)}>\r\n                  <option value=\"\">Select a user</option>\r\n                  {users.map((user, index) =>\r\n                    <option key={index} value={user.id}>{user.username}</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n              {resultData && (\r\n                <div>\r\n                  <RadarChart cx={300} cy={250} outerRadius={150} width={600} height={500} data={chartData}>\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey=\"subject\" />\r\n                    <PolarRadiusAxis angle={90} domain={[0, 40]} tick={<CustomizedAxisTick />} />\r\n                    <Radar name=\"Score\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\r\n                  </RadarChart>\r\n  \r\n                  <label><b>Score Value:</b></label>\r\n                  <div style={{ fontFamily: 'monospace', marginBottom: '5px', fontSize: '14px' }}><b>Score Value D:</b> {resultData.scoreValueD}</div>\r\n                  <div style={{ fontFamily: 'monospace', marginBottom: '5px', fontSize: '14px' }}><b>Score Value I:</b> {resultData.scoreValueI}</div>\r\n                  <div style={{ fontFamily: 'monospace', marginBottom: '5px', fontSize: '14px' }}><b>Score Value S:</b> {resultData.scoreValueS}</div>\r\n                  <div style={{ fontFamily: 'monospace', marginBottom: '5px', fontSize: '14px' }}><b>Score Value C:</b> {resultData.scoreValueC}</div>\r\n\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminNewQuestions.js",["256"],[],"import React, { useState, useEffect } from 'react';\r\nimport yaml from 'js-yaml';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminNewQuestion() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`${config.API_BASE_URL}/api/companies`)\r\n            .then(response => response.json())\r\n            .then(data => setCompanies(data));\r\n    }, []);\r\n\r\n    const handleFileUpload = async (event) => {\r\n        setLoading(true);\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const yamlText = e.target.result;\r\n            const questions = yaml.load(yamlText);\r\n            questions.forEach(question => question.CompanyId = selectedCompany);\r\n            setQuestions(questions);\r\n\r\n            try {\r\n                const response = await fetch(`${config.API_BASE_URL}/api/YamlUpload`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(questions)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    alert(\"Data successfully uploaded\");\r\n                } else {\r\n                    alert(\"Failed to upload data\");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dashboard}>\r\n            <DashboardSidebar />\r\n            <div className={styles.main}>\r\n                <Header title=\"Upload questions\" />\r\n                <div className={styles.content}>\r\n                    <div className={styles.sidebarRight}>\r\n                        <h1>Add new questions</h1>\r\n                        <label className={styles.label}>Select a company:</label>\r\n                        <div>\r\n                            <select className={styles.dropdownMenu} value={selectedCompany} onChange={event => setSelectedCompany(event.target.value)}>\r\n                                <option value=\"\">Select a company...</option>\r\n                                {companies.map(company => (\r\n                                    <option key={company.id} value={company.id}>{company.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <input type=\"file\" onChange={handleFileUpload} disabled={loading || !selectedCompany} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default AdminNewQuestion;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditQuestions.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminAddQuestions.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveUser.js",["257"],[],"// RemoveUser.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader'; // you might want to create separate css module for this component\r\nimport config from '../../config';\r\n\r\nfunction RemoveUser() {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [isUserRemoved, setIsUserRemoved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  const fetchCompanies = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${config.API_BASE_URL}/api/Companies`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setCompanies(response.data);\r\n  };\r\n\r\n  const fetchUsers = async (companyId) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${config.API_BASE_URL}/api/Companies/${companyId}/users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  const handleCompanyChange = (e) => {\r\n    setSelectedCompany(e.target.value);\r\n    fetchUsers(e.target.value);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setSelectedUser(e.target.value);\r\n  };\r\n\r\n  const handleRemoveUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem('token');\r\n    await axios.delete(`${config.API_BASE_URL}/api/Users/${selectedUser}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setIsUserRemoved(true);\r\n    setSelectedUser(\"\");\r\n  };\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Remove user\" />\r\n\r\n            <div className={styles.content}>\r\n          <h1>Remove User</h1>\r\n          {isUserRemoved && <p>User removed successfully!</p>}\r\n          <form onSubmit={handleRemoveUser}>\r\n            <label>\r\n              Company:\r\n              <select className={styles.dropdownMenu} name=\"companyId\" value={selectedCompany} onChange={handleCompanyChange}>\r\n                <option value=\"\">Select company</option>\r\n                {companies && companies.map((company) => (\r\n                  <option key={company.id} value={company.id}>\r\n                    {company.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n            <label>\r\n              User:\r\n              <select name=\"userId\" className={styles.dropdownMenu} value={selectedUser} onChange={handleUserChange}>\r\n                <option value=\"\">Select user</option>\r\n                {users && users.map((user) => (\r\n                  <option key={user.id} value={user.id}>\r\n                    {user.username}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n            <button type=\"submit\">Remove User</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RemoveUser;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveCompany.js",["258"],[],"// RemoveCompany.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader'; // you might want to create separate css module for this component\r\nimport config from '../../config';\r\n\r\nfunction RemoveCompany() {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n  const [isCompanyRemoved, setIsCompanyRemoved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  const fetchCompanies = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${config.API_BASE_URL}/api/Companies`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setCompanies(response.data);\r\n  };\r\n\r\n  const handleCompanyChange = (e) => {\r\n    setSelectedCompany(e.target.value);\r\n  };\r\n\r\n  const handleRemoveCompany = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem('token');\r\n    await axios.delete(`${config.API_BASE_URL}/api/Companies/${selectedCompany}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setIsCompanyRemoved(true);\r\n    setSelectedCompany(\"\");\r\n  };\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Remove company\" />\r\n            <div className={styles.content}>\r\n          <h1>Remove Company</h1>\r\n          {isCompanyRemoved && <p>Company removed successfully!</p>}\r\n          <form onSubmit={handleRemoveCompany}>\r\n            <label>\r\n              Company:\r\n              <select className={styles.dropdownMenu} name=\"companyId\" value={selectedCompany} onChange={handleCompanyChange}>\r\n                <option value=\"\">Select company</option>\r\n                {companies && companies.map((company) => (\r\n                  <option key={company.id} value={company.id}>\r\n                    {company.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n            <button type=\"submit\">Remove Company</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RemoveCompany;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditOnderwerp.js",["259"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader'; // create and import a new CSS module for this component\r\nimport config from '../../config';\r\n\r\nfunction EditOnderwerp() {\r\n    const [onderwerpen, setOnderwerpen] = useState([]);\r\n    const [selectedOnderwerp, setSelectedOnderwerp] = useState({ id: 0, name: \"\", description: \"\" });\r\n\r\n    const fetchOnderwerpen = async () => {\r\n        try {\r\n            const response = await axios.get(`${config.API_BASE_URL}/api/Onderwerp`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            setOnderwerpen(response.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchOnderwerpen();\r\n    }, []);\r\n\r\n    const handleOnderwerpChange = (e) => {\r\n        setSelectedOnderwerp(onderwerpen.find(o => o.id === parseInt(e.target.value)));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setSelectedOnderwerp({\r\n            ...selectedOnderwerp,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.put(`${config.API_BASE_URL}/api/Onderwerp/${selectedOnderwerp.id}`, selectedOnderwerp, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            alert('Onderwerp updated successfully!');\r\n            fetchOnderwerpen();  // fetch the list again to get the updated data\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const Header = ({ title }) => (\r\n        <div className={styles.header}>\r\n          <hr />\r\n          <div className={styles['page-title']}>{title}</div>\r\n        </div>\r\n      );\r\n    return (\r\n        <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Edit profiles\" />\r\n            <div className={styles.content}>\r\n                    <h1>Edit profiles</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>\r\n                            Onderwerp:\r\n                            <select className={styles.dropdownMenu} name=\"onderwerpId\" value={selectedOnderwerp.id} onChange={handleOnderwerpChange} required>\r\n                                <option value=\"\">Select onderwerp</option>\r\n                                {onderwerpen && onderwerpen.map((onderwerp) => (\r\n                                    <option key={onderwerp.id} value={onderwerp.id}>\r\n                                        {onderwerp.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n                        <label>\r\n                            Name:\r\n                            <input type=\"text\" className={styles.inputField} name=\"name\" value={selectedOnderwerp.name} onChange={handleInputChange} required />\r\n                        </label>\r\n                        <label>\r\n                            Description:\r\n                            <input type=\"text\" className={styles.inputField} name=\"description\" value={selectedOnderwerp.description} onChange={handleInputChange} required />\r\n                        </label>\r\n                        <button type=\"submit\">Update profiles</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditOnderwerp;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoPagina.js",["260","261"],[],"import React from 'react';\r\nimport styles from '../Css/Dashboard.module.css';\r\nimport DashboardSidebar from './DashboardSidebar';\r\nimport infopaginaImage from '../images/infopagina.PNG'; // Import the image\r\nimport infopaginaImage2 from '../images/infopagina2.PNG'; // Import the image\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction InfoPagina() {\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title=\"Info over de profielen\" />\r\n        <div className={styles.content}>\r\n          <div className={styles.imageContainer}>\r\n            <h3>Stuur ff goeie naam</h3>\r\n            <img src={infopaginaImage} alt=\"Image\" className={styles.image} /> {/* Use the imported image */}\r\n            <h3>Stuur ff goeie naam</h3>\r\n            <img src={infopaginaImage2} alt=\"Image\" className={styles.image} /> {/* Use the imported image */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoPagina;\r\n",[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminResetPassword.js",["262"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\nimport config from '../../config';\r\n\r\nfunction ResetPassword() {\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [generatedToken, setGeneratedToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${config.API_BASE_URL}/api/Users`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      setUsers(response.data);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleGenerateResetToken = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(`${config.API_BASE_URL}/api/Users/GenerateResetToken/${selectedUser}`, {}, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    setGeneratedToken(response.data.token);\r\n  };\r\n  const Header = ({ title }) => (\r\n    <div className={styles.header}>\r\n      <hr />\r\n      <div className={styles['page-title']}>{title}</div>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n        <Header title=\"Reset password\" />\r\n            <div className={styles.content}>\r\n              <h1>Generate Password Reset Token</h1>\r\n              <form onSubmit={handleGenerateResetToken}>\r\n                <div>\r\n                  <label>\r\n                    Select User:\r\n                  </label>\r\n                  <select className={styles.dropdownMenu} name=\"selectedUser\" value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)}>\r\n                    {users.map((user) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.username}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <button type=\"submit\">Generate Token</button>\r\n              </form>\r\n              {generatedToken && <p>The generated token is: {generatedToken}</p>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ResetPasswordForm.js",["263"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport { useNavigate } from 'react-router-dom'; // import useNavigate\r\nimport styles from '../Css/LoginForm.module.css';\r\nimport config from '../config';\r\n\r\nfunction ResetPasswordForm() {\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate(); // initialize useNavigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(`${config.API_BASE_URL}/api/Users/ResetPassword`, {\r\n        resetToken: token,\r\n        newPassword: password\r\n      });\r\n    \r\n      setError(\"Password reset successfully!\");\r\n    } catch (error) {\r\n      setError(\"An error occurred\");\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Token:</label>\r\n          <input type=\"text\" value={token} onChange={e => setToken(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>New Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className={styles.input} />\r\n\r\n          <label className={styles.label}>Confirm Password:</label>\r\n          <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className={styles.input} />\r\n\r\n          <button type=\"submit\" className={styles.loginButton}>Reset Password</button>\r\n        </form>\r\n        <button className={styles.loginButton} onClick={() => navigate('/login')}>Back to Login</button> {/* Add the back to login button */}\r\n        {error && <div className={styles.error}>{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\json.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoReactionForm.js",["264","265"],[],"import React, { useState } from 'react';\r\nimport styles from '../Css/ReactionForm.module.css';\r\nimport ReactionForm from './ReactionForm';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n  const IntroPage = () => {\r\n    const navigate = useNavigate();\r\n  \r\n    const handleIntroRead = () => {\r\n      navigate('/reactionform');\r\n    };\r\n\r\n  return (\r\n    <div className={styles[\"form-control\"]}>\r\n        <div>\r\n          <h1>Welcome!</h1>\r\n          <p>Welkom bij de ontdekkingsreis naar uw unieke DISC-profiel. DISC is een krachtig en breed erkend psychometrisch instrument dat u helpt bij het begrijpen van uw persoonlijke werkstijl, communicatievoorkeuren en gedragspatronen. Dit inzicht kan u helpen effectiever te worden in uw persoonlijke en professionele leven, door de manier waarop u omgaat met anderen te verbeteren en door uzelf beter te begrijpen.</p>\r\n\r\n<p>Het DISC-model classificeert individuen op basis van vier primaire gedragsstijlen: Dominantie (D), Invloed (I), Stabiliteit (S) en Consciëntieusheid (C). Deze stijlen hebben elk unieke kenmerken en zijn gebaseerd op hoe u als individu reageert op uitdagingen, hoe u met anderen omgaat, hoe u veranderingen benadert en hoe u regels en procedures interpreteert.</p>\r\n\r\n<p>Voordat u aan de vragenlijst begint, zijn er enkele belangrijke punten die u in gedachten moet houden. Ten eerste, \r\n    er is geen 'goed' of 'fout' DISC-profiel. Elke stijl heeft zijn eigen sterke punten en mogelijkheden voor groei.\r\n     Het is ook belangrijk om te begrijpen dat de meeste mensen een mix van stijlen hebben, met één of twee die meestal dominanter zijn.</p>\r\n\r\n<p>Als u de vragenlijst invult, probeer dan eerlijk en authentiek te zijn. Antwoord op basis van hoe u zichzelf werkelijk ziet, \r\n    niet hoe u zou willen zijn of hoe anderen u misschien zien. Denk aan uw gedrag en gevoelens in een verscheidenheid aan situaties.</p> \r\n\r\n<p>Houd er rekening mee dat deze vragenlijst geen volledig beeld van u als persoon zal geven.\r\n     U bent complexer dan elk model kan beschrijven. Het doel hier is om een basisinzicht te bieden dat kan bijdragen aan persoonlijke groei\r\n      en effectievere interacties met anderen.</p>\r\n\r\n<p>Na het invullen van de vragenlijst krijgt u een gedetailleerd rapport over uw DISC-profiel. \r\n    Dit rapport zal inzicht bieden in uw unieke sterktes en gedragstendensen, en zal ook suggesties geven over hoe u uw effectiviteit kunt verhogen. \r\n    Het kan nuttig zijn om deze resultaten te bespreken met een coach of mentor, die u kan helpen de inzichten in uw gedrag te vertalen naar \r\n    concrete stappen voor groei en verbetering.</p>\r\n\r\n<p>Tot slot, weet dat uw DISC-profiel kan veranderen naarmate u groeit en verandert. \r\n    Dit instrument is bedoeld om u te helpen bij het navigeren door die veranderingen en om uw bewustzijn van uw unieke benadering \r\n    van werk en interactie te vergroten. We moedigen u aan om deze reis van zelfbewustzijn te omarmen en kijken uit naar uw ontdekkingen. \r\n    Veel succes met het invullen van de vragenlijst!</p>\r\n          <button className={styles[\"button\"]} onClick={handleIntroRead}>Go to question form</button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroPage;\r\n",{"ruleId":"266","severity":1,"message":"267","line":34,"column":13,"nodeType":"268","messageId":"269","endLine":34,"endColumn":19},{"ruleId":"266","severity":1,"message":"270","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":92,"column":63,"nodeType":"273","messageId":"274","endLine":92,"endColumn":65},{"ruleId":"271","severity":1,"message":"272","line":95,"column":96,"nodeType":"273","messageId":"274","endLine":95,"endColumn":98},{"ruleId":"266","severity":1,"message":"275","line":3,"column":23,"nodeType":"268","messageId":"269","endLine":3,"endColumn":27},{"ruleId":"266","severity":1,"message":"275","line":3,"column":23,"nodeType":"268","messageId":"269","endLine":3,"endColumn":27},{"ruleId":"266","severity":1,"message":"275","line":3,"column":10,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"276","line":10,"column":10,"nodeType":"268","messageId":"269","endLine":10,"endColumn":15},{"ruleId":"266","severity":1,"message":"277","line":31,"column":9,"nodeType":"268","messageId":"269","endLine":31,"endColumn":26},{"ruleId":"266","severity":1,"message":"278","line":38,"column":9,"nodeType":"268","messageId":"269","endLine":38,"endColumn":28},{"ruleId":"266","severity":1,"message":"279","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":19},{"ruleId":"266","severity":1,"message":"279","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":9,"column":1,"nodeType":"282","endLine":11,"endColumn":3},{"ruleId":"266","severity":1,"message":"279","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":121,"column":63,"nodeType":"273","messageId":"274","endLine":121,"endColumn":65},{"ruleId":"271","severity":1,"message":"272","line":124,"column":96,"nodeType":"273","messageId":"274","endLine":124,"endColumn":98},{"ruleId":"266","severity":1,"message":"283","line":8,"column":7,"nodeType":"268","messageId":"269","endLine":8,"endColumn":13},{"ruleId":"266","severity":1,"message":"284","line":18,"column":10,"nodeType":"268","messageId":"269","endLine":18,"endColumn":23},{"ruleId":"266","severity":1,"message":"285","line":14,"column":12,"nodeType":"268","messageId":"269","endLine":14,"endColumn":21},{"ruleId":"266","severity":1,"message":"279","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":19},{"ruleId":"266","severity":1,"message":"279","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":19},{"ruleId":"266","severity":1,"message":"279","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":19},{"ruleId":"286","severity":1,"message":"287","line":22,"column":13,"nodeType":"288","endLine":22,"endColumn":79},{"ruleId":"286","severity":1,"message":"287","line":24,"column":13,"nodeType":"288","endLine":24,"endColumn":80},{"ruleId":"266","severity":1,"message":"279","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":19},{"ruleId":"266","severity":1,"message":"289","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":17},{"ruleId":"266","severity":1,"message":"290","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"291","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":20},"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'DashboardHeader' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'users' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleNewUserSubmit' is assigned a value but never used.","'AdminHeader' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Header' is assigned a value but never used.","'onderwerpData' is assigned a value but never used.","'questions' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'jwtDecode' is defined but never used.","'useState' is defined but never used.","'ReactionForm' is defined but never used."]