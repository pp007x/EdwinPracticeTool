[{"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\index.js":"1","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\App.js":"2","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ReactionForm.js":"4","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\LoginForm.js":"5","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Protectedroute.js":"6","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Dashboard.js":"7","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\RegisterForm.js":"8","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardCompany.js":"9","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Logout.js":"10","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardSidebar.js":"11","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardHeader.js":"12","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\index.js":"13","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\App.js":"14","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\reportWebVitals.js":"15","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\LoginForm.js":"16","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\ReactionForm.js":"17","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Protectedroute.js":"18","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\RegisterForm.js":"19","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Dashboard.js":"20","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardCompany.js":"21","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Logout.js":"22","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardSidebar.js":"23","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardHeader.js":"24","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\Adminpage.js":"25","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AddCompany.js":"26","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminSidebar.js":"27","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminHeader.js":"28","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCreateUser.js":"29","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\config.js":"30","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCompanyDashboard.js":"31","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminUserDashboard.js":"32","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminNewQuestions.js":"33","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditQuestions.js":"34","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminAddQuestions.js":"35","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveUser.js":"36","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveCompany.js":"37","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditOnderwerp.js":"38","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoPagina.js":"39","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminResetPassword.js":"40","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ResetPasswordForm.js":"41"},{"size":552,"mtime":1688156697445,"results":"42","hashOfConfig":"43"},{"size":3545,"mtime":1688502423275,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1688156697445,"results":"45","hashOfConfig":"43"},{"size":4053,"mtime":1688495118415,"results":"46","hashOfConfig":"43"},{"size":3278,"mtime":1688502688226,"results":"47","hashOfConfig":"43"},{"size":598,"mtime":1688156697440,"results":"48","hashOfConfig":"43"},{"size":4011,"mtime":1688527179404,"results":"49","hashOfConfig":"43"},{"size":3062,"mtime":1688390680037,"results":"50","hashOfConfig":"43"},{"size":6024,"mtime":1688524616689,"results":"51","hashOfConfig":"43"},{"size":483,"mtime":1688069441976,"results":"52","hashOfConfig":"43"},{"size":1294,"mtime":1688504949569,"results":"53","hashOfConfig":"43"},{"size":257,"mtime":1688392461082,"results":"54","hashOfConfig":"43"},{"size":552,"mtime":1688156697445,"results":"55","hashOfConfig":"56"},{"size":1238,"mtime":1688158033239,"results":"57","hashOfConfig":"56"},{"size":375,"mtime":1688156697445,"results":"58","hashOfConfig":"56"},{"size":2741,"mtime":1688157317773,"results":"59","hashOfConfig":"56"},{"size":2224,"mtime":1688156697440,"results":"60","hashOfConfig":"56"},{"size":598,"mtime":1688156697440,"results":"61","hashOfConfig":"56"},{"size":2572,"mtime":1688157685090,"results":"62","hashOfConfig":"56"},{"size":3890,"mtime":1688156697438,"results":"63","hashOfConfig":"56"},{"size":5290,"mtime":1688156697439,"results":"64","hashOfConfig":"56"},{"size":483,"mtime":1688156697440,"results":"65","hashOfConfig":"56"},{"size":984,"mtime":1688156697439,"results":"66","hashOfConfig":"56"},{"size":221,"mtime":1688156697439,"results":"67","hashOfConfig":"56"},{"size":1739,"mtime":1688513793485,"results":"68","hashOfConfig":"43"},{"size":2303,"mtime":1688510861820,"results":"69","hashOfConfig":"43"},{"size":3383,"mtime":1688504731880,"results":"70","hashOfConfig":"43"},{"size":270,"mtime":1688320102647,"results":"71","hashOfConfig":"43"},{"size":3454,"mtime":1688511855899,"results":"72","hashOfConfig":"43"},{"size":177,"mtime":1688527255618,"results":"73","hashOfConfig":"43"},{"size":7189,"mtime":1688524435702,"results":"74","hashOfConfig":"43"},{"size":5306,"mtime":1688527207394,"results":"75","hashOfConfig":"43"},{"size":2981,"mtime":1688516961968,"results":"76","hashOfConfig":"43"},{"size":6589,"mtime":1688513622210,"results":"77","hashOfConfig":"43"},{"size":6436,"mtime":1688514375026,"results":"78","hashOfConfig":"43"},{"size":3291,"mtime":1688515970632,"results":"79","hashOfConfig":"43"},{"size":2354,"mtime":1688515982613,"results":"80","hashOfConfig":"43"},{"size":3732,"mtime":1688516017825,"results":"81","hashOfConfig":"43"},{"size":852,"mtime":1688522499764,"results":"82","hashOfConfig":"43"},{"size":2268,"mtime":1688516891779,"results":"83","hashOfConfig":"43"},{"size":2303,"mtime":1688502869025,"results":"84","hashOfConfig":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"ef1nh3",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qd77vu",{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"88"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"88"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\index.js",[],[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\App.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ReactionForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\LoginForm.js",["218"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport styles from '../Css/LoginForm.module.css';  // import your CSS file as a module\r\nimport logo from '../images/HigtechLogo.png';\r\nimport config from '../config';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${config.API_BASE_URL}/api/Authentication/Login`, data);\r\n\r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n\r\n      // Decode the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      \r\n      // Get the role and the user ID from the token\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n      const userId = decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']; // Assuming the user ID is stored in this claim\r\n\r\n      // Check user's scores\r\n      try {\r\n        const totalScoreResponse = await axios.get(`${config.API_BASE_URL}/api/TotalScores/user/me`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${response.data}`\r\n          }\r\n        });\r\n        \r\n        const totalScore = totalScoreResponse.data;\r\n\r\n        // If user's scores are null, navigate to /reactionform\r\n        if (!totalScore || totalScore === null) {\r\n          navigate('/reactionform');\r\n        } else {\r\n          // Navigate to the correct page based on the role\r\n          if (userRole === 'Admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n\r\n      } catch (error) {\r\n        navigate('/reactionform');\r\n      }\r\n\r\n    } catch (error) {\r\n      setLoginError(\"Invalid username or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginFormWrapper}>\r\n      <div className={styles.inputBox}>\r\n        <img src={logo} alt=\"Logo\" className={styles.logo} /> \r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>Username:</label>\r\n          <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" className={styles.input} />\r\n          <label className={styles.label}>Password:</label>\r\n          <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" className={styles.input} />\r\n          {loginError && <div className={styles.error}>{loginError}</div>}\r\n          <button type=\"submit\" className={styles.loginButton}>Login</button>\r\n        </form>\r\n        <button className={styles.registerButton} onClick={() => navigate('/register')}>Register</button>\r\n        <button className={styles.resetPasswordButton} onClick={() => navigate('/resetpassword')}>Forgot Password?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Protectedroute.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Dashboard.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\RegisterForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardCompany.js",["219","220"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\nimport styles from '../Css/CompanyDashboard.module.css'; // Add this line\r\nimport DashboardSidebar from './DashboardSidebar';\r\nimport DashboardHeader from './DashboardHeader';\r\n\r\nconst descriptions = [\r\n  \"Analyticus (C)\", \"Strateeg (Cd)\", \"Perfectionist (Cs)\", \"Raadgever (Ci)\",\r\n  \"Pionier (Dc)\", \"Beslisser (D)\", \"Doorzetter (Ds)\", \"Avonturier (Di)\",\r\n  \"Specialist (Sc)\", \"Doener (Sd)\", \"Dienstverlener (S)\", \"Helper (Si)\",\r\n  \"Diplomaat (Ic)\", \"Inspirator (Id)\", \"Bemiddelaar (Is)\", \"Entertainer (I)\"\r\n];\r\n\r\nconst boxCodeToIndex = {\r\n  \"C\": 0, \"D\": 1, \"S\": 2, \"I\": 3,\r\n  \"c\": 0, \"d\": 1, \"s\": 2, \"i\": 3,\r\n};\r\n\r\nconst CompanyDashboard = () => {\r\n  const [userBoxes, setUserBoxes] = useState([]);\r\n  const [userScores, setUserScores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBoxes = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies/1/users`);\r\n        const data = response.data;\r\n        // Ensure data is an array before setting it\r\n        setUserBoxes(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user boxes:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUserScores = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/TotalScores/all`);\r\n        const data = response.data;\r\n        // Ensure data is an array before setting it\r\n        setUserScores(Array.isArray(data) ? data : []);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error('Error fetching user scores:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserBoxes();\r\n    fetchUserScores();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n    <DashboardSidebar />\r\n    <div className={styles.main}>\r\n      <DashboardHeader />\r\n        <div className={styles.content}>\r\n        <div className={styles.sidebarRight}>\r\n          <div className={styles[\"dashboard-title\"]}>\r\n            <h1>Company Dashboard</h1>\r\n            <p>Welcome to the Company Dashboard page!</p>\r\n          </div>\r\n\r\n          <div className={styles[\"dashboard-content\"]}>\r\n          <div className={styles[\"big-square-wrapper\"]}>\r\n              <div className={styles[\"big-square-container\"]}>\r\n                {['C', 'D', 'S', 'I'].map((letter, bigSquareIndex) => (\r\n                  <div className={`${styles[\"big-square\"]} ${styles[\"big-square-\" + (bigSquareIndex + 1)]}`} key={bigSquareIndex}>\r\n                    <p className={styles[\"corner-letter\"]}>{letter}</p>\r\n                    <div className={styles[\"small-squares\"]}>\r\n                    {[0, 1, 2, 3].map((smallSquareIndex) => {\r\n                      const descriptionIndex = bigSquareIndex * 4 + smallSquareIndex;\r\n                      const colorClass = `small-square-${descriptionIndex + 1}`;\r\n                      return (\r\n                        <div className={`${styles[\"small-square\"]} ${styles[colorClass]}`} key={smallSquareIndex}>\r\n                          <div className={styles[\"box-content\"]}>\r\n                            <p className={styles[\"description-name\"]}>{descriptions[descriptionIndex]}</p>\r\n                            {smallSquareIndex === 3 && bigSquareIndex === 0 && <p className={styles[\"indirect-label\"]}>Indirect</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 2 && <p className={styles[\"mens-label\"]}>Mens</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 1 && <p className={styles[\"taak-label\"]}>Taak</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 3 && <p className={styles[\"direct-label\"]}>Direct</p>}\r\n                            <div className={styles[\"score-container\"]}>\r\n                              {userBoxes\r\n                                .filter(user =>\r\n                                  console.log(bigSquareIndex) ||\r\n                                  typeof user.box === 'string' &&\r\n                                  user.box.length === 2 &&\r\n                                  boxCodeToIndex[user.box[0].toUpperCase()] === bigSquareIndex &&\r\n                                  boxCodeToIndex[user.box[1].toLowerCase()] === smallSquareIndex)\r\n                                .map((user, index) => (\r\n                                  <p className={styles[\"score-name\"]} key={index}>{user.username}</p>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles[\"participant-table-container\"]}>\r\n              <table className={styles[\"participant-table\"]}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Deelnemer</th>\r\n                    <th>D</th>\r\n                    <th>I</th>\r\n                    <th>S</th>\r\n                    <th>C</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userBoxes.map((user, index) => {\r\n                    const userScore = userScores.find(score => score.userId === user.id) || {};\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{user.username}</td>\r\n                        <td>{userScore.scoreValueD}</td>\r\n                        <td>{userScore.scoreValueI}</td>\r\n                        <td>{userScore.scoreValueS}</td>\r\n                        <td>{userScore.scoreValueC}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyDashboard;","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Logout.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\DashboardHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\index.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\App.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\LoginForm.js",["221"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../Css/LoginForm.css';  // import your CSS file\r\nimport logo from '../images/HigtechLogo.png';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Login\", data);\r\n      \r\n      // Save the JWT token to local storage\r\n      localStorage.setItem('token', response.data);\r\n  \r\n      // Get the role from the token\r\n      const decodedToken = jwtDecode(response.data);\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n  \r\n      // Check user's scores\r\n      try {\r\n        const totalScoreResponse = await axios.get(\"http://localhost:5162/api/TotalScores/user\", {\r\n          headers: {\r\n            'Authorization': `Bearer ${response.data}`\r\n          }\r\n        });\r\n  \r\n        const totalScore = totalScoreResponse.data;\r\n  \r\n        // If user's scores are null, navigate to /reactionform\r\n        if (!totalScore || totalScore === null) {\r\n          navigate('/reactionform');\r\n        } else {\r\n          // Navigate to the correct page based on the role\r\n          if (userRole === 'Admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(\"Failed to get user's scores.\", error);\r\n      }\r\n  \r\n    } catch (error) {\r\n      setLoginError(\"Invalid username or password.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <img src={logo} alt=\"Logo\" className=\"logo\" /> {/* Add the logo */}\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"label\">Username:</label>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        <label className=\"label\">Password:</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        {loginError && <div className=\"error\">{loginError}</div>}\r\n        <button type=\"submit\" className=\"loginButton\">Login</button>\r\n      </form>\r\n      <button className=\"loginButton\" onClick={() => navigate('/register')}>Register</button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\ReactionForm.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Protectedroute.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\RegisterForm.js",["222"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../Css/LoginForm.css';  // import your CSS file\r\n\r\nfunction RegisterForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [companyCode, setCompanyCode] = useState(\"\");\r\n  const [registerError, setRegisterError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegisterSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Register\", {\r\n        username,\r\n        password,\r\n        companyCode\r\n      });\r\n\r\n      localStorage.setItem('token', response.data);\r\n\r\n      handleLogin();\r\n\r\n    } catch (error) {\r\n      setRegisterError(\"Registration failed.\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const data = {\r\n      username: username,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5162/api/Authentication/Login\", data);\r\n      \r\n      localStorage.setItem('token', response.data);\r\n  \r\n      const decodedToken = jwtDecode(response.data);\r\n      const userRole = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n  \r\n      if (userRole === 'Admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/reactionform');\r\n      }\r\n  \r\n    } catch (error) {\r\n      setRegisterError(\"Automatic login failed.\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleReturnClick = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <button className=\"returnButton\" onClick={handleReturnClick}>Return</button>\r\n      <form onSubmit={handleRegisterSubmit}>\r\n        <label className=\"label\">Username:</label>\r\n        <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\r\n        <label className=\"label\">Password:</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n        <label className=\"label\">Company Code:</label>\r\n        <input type=\"text\" value={companyCode} onChange={e => setCompanyCode(e.target.value)} placeholder=\"Company Code\" />\r\n        {registerError && <div className=\"error\">{registerError}</div>}\r\n        <button type=\"submit\" className=\"loginButton\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Dashboard.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardCompany.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\Logout.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\Frontend\\src\\components\\DashboardHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\Adminpage.js",["223","224","225","226"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport config from '../../config';\r\n\r\nfunction AdminPortal() {\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    isAdmin: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`${config.API_BASE_URL}/api/Users`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setUsers(response.data);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewUser({\r\n      ...newUser,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleNewUserSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem('token');\r\n    await axios.post(`${config.API_BASE_URL}/api/Users`, newUser, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    const response = await axios.get(`${config.API_BASE_URL}/api/Users`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dashboard} >\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n            <AdminHeader />\r\n            <div className={styles.content}>\r\n          <h1>Admin Portal</h1>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPortal;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AddCompany.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminSidebar.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminHeader.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCreateUser.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\config.js",["227"],[],"let API_BASE_URL = \"\";\r\n\r\n\r\n// API_BASE_URL = \"http://localhost:5162\";\r\n\r\nAPI_BASE_URL = \"https://temptestedwin.azurewebsites.net\";\r\n\r\n\r\nexport default {\r\n    API_BASE_URL\r\n};\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminCompanyDashboard.js",["228","229"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nimport AdminSidebar from './AdminSidebar';\r\nimport AdminHeader from './AdminHeader';\r\n\r\nconst descriptions = [\r\n  \"Analyticus (C)\", \"Strateeg (Cd)\", \"Perfectionist (Cs)\", \"Raadgever (Ci)\",\r\n  \"Pionier (Dc)\", \"Beslisser (D)\", \"Doorzetter (Ds)\", \"Avonturier (Di)\",\r\n  \"Specialist (Sc)\", \"Doener (Sd)\", \"Dienstverlener (S)\", \"Helper (Si)\",\r\n  \"Diplomaat (Ic)\", \"Inspirator (Id)\", \"Bemiddelaar (Is)\", \"Entertainer (I)\"\r\n];\r\n\r\nconst boxCodeToIndex = {\r\n  \"C\": 0, \"D\": 1, \"S\": 2, \"I\": 3,\r\n  \"c\": 0, \"d\": 1, \"s\": 2, \"i\": 3,\r\n};\r\n\r\nconst AdminCompanyDashboard = () => {\r\n  const [userBoxes, setUserBoxes] = useState([]);\r\n  const [userScores, setUserScores] = useState([]);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies`);\r\n        const data = response.data;\r\n        setCompanies(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching companies:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUserBoxes = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/Companies/${selectedCompany}/users`);\r\n        const data = response.data;\r\n        setUserBoxes(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user boxes:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUserScores = async () => {\r\n      try {\r\n        const response = await axios.get(`${config.API_BASE_URL}/api/TotalScores/all`);\r\n        const data = response.data;\r\n        setUserScores(Array.isArray(data) ? data : []);\r\n      } catch (error) {\r\n        console.error('Error fetching user scores:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedCompany) {\r\n      fetchUserBoxes();\r\n      fetchUserScores();\r\n    }\r\n  }, [selectedCompany]);\r\n\r\n  return (\r\n    <div className={styles.dashboard}>\r\n        <AdminSidebar />\r\n        <div className={styles.main}>\r\n            <AdminHeader />\r\n            <div className={styles.content}>\r\n            <div className={styles.sidebarRight}>\r\n                <div className={styles[\"dashboard-title\"]}>\r\n                    <h1>Company Dashboard</h1>\r\n                    <p>Welcome to the Company Dashboard page!</p>\r\n                </div>\r\n\r\n                <div className={styles[\"company-selection-container\"] }>\r\n                    <div>\r\n                        <label>Select a Company:</label>\r\n                        </div>\r\n                        <div>\r\n                        <select className={styles.dropdownMenu} onChange={(e) => setSelectedCompany(e.target.value)}>\r\n                            <option value=\"\">Select a company</option>\r\n                            {companies.map((company, index) =>\r\n                                <option key={index} value={company.id}>{company.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className={styles[\"dashboard-content\"]}>\r\n          <div className={styles[\"big-square-wrapper\"]}>\r\n              <div className={styles[\"big-square-container\"]}>\r\n                {['C', 'D', 'S', 'I'].map((letter, bigSquareIndex) => (\r\n                  <div className={`${styles[\"big-square\"]} ${styles[\"big-square-\" + (bigSquareIndex + 1)]}`} key={bigSquareIndex}>\r\n                    <p className={styles[\"corner-letter\"]}>{letter}</p>\r\n                    <div className={styles[\"small-squares\"]}>\r\n                    {[0, 1, 2, 3].map((smallSquareIndex) => {\r\n                      const descriptionIndex = bigSquareIndex * 4 + smallSquareIndex;\r\n                      const colorClass = `small-square-${descriptionIndex + 1}`;\r\n                      return (\r\n                        <div className={`${styles[\"small-square\"]} ${styles[colorClass]}`} key={smallSquareIndex}>\r\n                          <div className={styles[\"box-content\"]}>\r\n                            <p className={styles[\"description-name\"]}>{descriptions[descriptionIndex]}</p>\r\n                            {smallSquareIndex === 2 && bigSquareIndex === 0 && <p className={styles[\"indirect-label\"]}>Indirect</p>}\r\n                            {smallSquareIndex === 1 && bigSquareIndex === 2 && <p className={styles[\"mens-label\"]}>Mens</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 1 && <p className={styles[\"taak-label\"]}>Taak</p>}\r\n                            {smallSquareIndex === 0 && bigSquareIndex === 3 && <p className={styles[\"direct-label\"]}>Direct</p>}\r\n                            <div className={styles[\"score-container\"]}>\r\n                              {userBoxes\r\n                                .filter(user =>\r\n                                  console.log(bigSquareIndex) ||\r\n                                  typeof user.box === 'string' &&\r\n                                  user.box.length === 2 &&\r\n                                  boxCodeToIndex[user.box[0].toUpperCase()] === bigSquareIndex &&\r\n                                  boxCodeToIndex[user.box[1].toLowerCase()] === smallSquareIndex)\r\n                                .map((user, index) => (\r\n                                  <p className={styles[\"score-name\"]} key={index}>{user.username}</p>\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles[\"participant-table-container\"]}>\r\n              <table className={styles[\"participant-table\"]}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Deelnemer</th>\r\n                    <th>D</th>\r\n                    <th>I</th>\r\n                    <th>S</th>\r\n                    <th>C</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userBoxes.map((user, index) => {\r\n                    const userScore = userScores.find(score => score.userId === user.id) || {};\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{user.username}</td>\r\n                        <td>{userScore.scoreValueD}</td>\r\n                        <td>{userScore.scoreValueI}</td>\r\n                        <td>{userScore.scoreValueS}</td>\r\n                        <td>{userScore.scoreValueC}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCompanyDashboard;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminUserDashboard.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminNewQuestions.js",["230"],[],"import React, { useState, useEffect } from 'react';\r\nimport yaml from 'js-yaml';\r\nimport config from '../../config';\r\nimport DashboardSidebar from './AdminSidebar';\r\nimport styles from '../../Css/CompanyDashboard.module.css'; \r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction AdminNewQuestion() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`${config.API_BASE_URL}/api/companies`)\r\n            .then(response => response.json())\r\n            .then(data => setCompanies(data));\r\n    }, []);\r\n\r\n    const handleFileUpload = async (event) => {\r\n        setLoading(true);\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const yamlText = e.target.result;\r\n            const questions = yaml.load(yamlText);\r\n            questions.forEach(question => question.CompanyId = selectedCompany);\r\n            setQuestions(questions);\r\n\r\n            try {\r\n                const response = await fetch(`${config.API_BASE_URL}/api/YamlUpload`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(questions)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    alert(\"Data successfully uploaded\");\r\n                } else {\r\n                    alert(\"Failed to upload data\");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.dashboard}>\r\n            <DashboardSidebar />\r\n            <div className={styles.main}>\r\n                <Header title=\"Admin New Question\" />\r\n                <div className={styles.sidebarRight}>\r\n                <h1>Add new questions</h1>\r\n                    <label className={styles.label}>Select a company:</label>\r\n                    <div>\r\n                <select className={styles.dropdownMenu} value={selectedCompany} onChange={event => setSelectedCompany(event.target.value)}>\r\n                    <option value=\"\">Select a company...</option>\r\n                    {companies.map(company => (\r\n                        <option key={company.id} value={company.id}>{company.name}</option>\r\n                    ))}\r\n                </select>\r\n                </div>\r\n                <input type=\"file\" onChange={handleFileUpload} disabled={loading || !selectedCompany} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminNewQuestion;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditQuestions.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminAddQuestions.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveUser.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminRemoveCompany.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminEditOnderwerp.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\InfoPagina.js",["231"],[],"import React from 'react';\r\nimport styles from '../Css/Dashboard.module.css';\r\nimport DashboardSidebar from './DashboardSidebar';\r\nimport infopaginaImage from '../images/infopagina.PNG'; // Import the image\r\n\r\nconst Header = ({ title }) => (\r\n  <div className={styles.header}>\r\n    <hr />\r\n    <div className={styles[\"page-title\"]}>{title}</div>\r\n  </div>\r\n);\r\n\r\nfunction InfoPagina() {\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <DashboardSidebar />\r\n      <div className={styles.main}>\r\n        <Header title=\"Your Page Title\" />\r\n        <div className={styles.content}>\r\n          <div className={styles.imageContainer}>\r\n            <img src={infopaginaImage} alt=\"Image\" className={styles.image} /> {/* Use the imported image */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoPagina;\r\n","C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\Admin\\AdminResetPassword.js",[],[],"C:\\Users\\steph\\Documents\\EdwinPracticeTool\\frontend\\src\\components\\ResetPasswordForm.js",[],[],{"ruleId":"232","severity":1,"message":"233","line":34,"column":13,"nodeType":"234","messageId":"235","endLine":34,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":85,"column":63,"nodeType":"238","messageId":"239","endLine":85,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":88,"column":96,"nodeType":"238","messageId":"239","endLine":88,"endColumn":98},{"ruleId":"232","severity":1,"message":"240","line":3,"column":23,"nodeType":"234","messageId":"235","endLine":3,"endColumn":27},{"ruleId":"232","severity":1,"message":"240","line":3,"column":23,"nodeType":"234","messageId":"235","endLine":3,"endColumn":27},{"ruleId":"232","severity":1,"message":"240","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":14},{"ruleId":"232","severity":1,"message":"241","line":10,"column":10,"nodeType":"234","messageId":"235","endLine":10,"endColumn":15},{"ruleId":"232","severity":1,"message":"242","line":31,"column":9,"nodeType":"234","messageId":"235","endLine":31,"endColumn":26},{"ruleId":"232","severity":1,"message":"243","line":38,"column":9,"nodeType":"234","messageId":"235","endLine":38,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":9,"column":1,"nodeType":"246","endLine":11,"endColumn":3},{"ruleId":"236","severity":1,"message":"237","line":113,"column":63,"nodeType":"238","messageId":"239","endLine":113,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":116,"column":96,"nodeType":"238","messageId":"239","endLine":116,"endColumn":98},{"ruleId":"232","severity":1,"message":"247","line":14,"column":12,"nodeType":"234","messageId":"235","endLine":14,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":21,"column":13,"nodeType":"250","endLine":21,"endColumn":79},"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'users' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleNewUserSubmit' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'questions' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]